{"version":3,"file":"nivo-bar.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/BarAnnotations.tsx","../src/BarLegends.tsx","../src/compute/common.ts","../src/compute/grouped.ts","../src/compute/stacked.ts","../src/compute/legends.ts","../src/BarItem.tsx","../src/BarTooltip.tsx","../src/props.ts","../src/Bar.tsx","../src/BarCanvas.tsx","../src/ResponsiveBar.tsx","../src/ResponsiveBarCanvas.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarCommonProps, LegendData } from './types'\n\ninterface BarLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: BarCommonProps<RawDatum>['legends']\n    data: LegendData[]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    data,\n    toggleSerie,\n}: BarLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={legend.data ?? data}\n                    toggleSerie={\n                        legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                    }\n                />\n            ))}\n        </>\n    )\n}\n","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (computeScale(\n        indexScale,\n        { all: data.map(getIndex), min: 0, max: 0 },\n        size,\n        axis\n    ) as ScaleBand<string>).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: RawDatum[], keys: string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n","import { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand } from '@nivo/scales'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\nimport { computeScale } from '@nivo/scales'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst flatten = <T>(array: T[][]) => ([] as T[]).concat(...array)\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n) => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars = flatten(\n        keys.map((key, i) =>\n            range(0, xScale.domain().length).map(index => {\n                const [rawValue, value] = coerceValue(data[index][key])\n                const indexValue = getIndex(data[index])\n                const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n                const y = getY(value)\n                const barHeight = getHeight(value, y)\n                const barData = {\n                    id: key,\n                    value: rawValue === null ? rawValue : value,\n                    formattedValue: formatValue(value),\n                    hidden: false,\n                    index,\n                    indexValue,\n                    data: cleanedData[index],\n                }\n\n                return {\n                    key: `${key}.${barData.indexValue}`,\n                    data: barData,\n                    x,\n                    y,\n                    width: barWidth,\n                    height: barHeight,\n                    color: getColor(barData),\n                    label: getTooltipLabel(barData),\n                }\n            })\n        )\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n) => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars = flatten(\n        keys.map((key, i) =>\n            range(0, yScale.domain().length).map(index => {\n                const [rawValue, value] = coerceValue(data[index][key])\n                const indexValue = getIndex(data[index])\n                const x = getX(value)\n                const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n                const barWidth = getWidth(value, x)\n                const barData = {\n                    id: key,\n                    value: rawValue === null ? rawValue : value,\n                    formattedValue: formatValue(value),\n                    hidden: false,\n                    index,\n                    indexValue,\n                    data: cleanedData[index],\n                }\n\n                return {\n                    key: `${key}.${barData.indexValue}`,\n                    data: barData,\n                    x,\n                    y,\n                    width: barWidth,\n                    height: barHeight,\n                    color: getColor(barData),\n                    label: getTooltipLabel(barData),\n                }\n            })\n        )\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : ((arr as unknown) as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n) => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars = flattenDeep(\n        stackedData.map(stackedDataItem =>\n            xScale.domain().map((index, i) => {\n                const d = stackedDataItem[i]\n                const x = xScale(getIndex(d.data)) ?? 0\n                const y = (getY(d) ?? 0) + innerPadding * 0.5\n                const barHeight = getHeight(d, y) - innerPadding\n                const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n                const barData = {\n                    id: stackedDataItem.key,\n                    value: rawValue === null ? rawValue : value,\n                    formattedValue: formatValue(value),\n                    hidden: false,\n                    index: i,\n                    indexValue: index,\n                    data: filterNullValues(d.data),\n                }\n\n                return {\n                    key: `${stackedDataItem.key}.${index}`,\n                    data: barData,\n                    x,\n                    y,\n                    width: barWidth,\n                    height: barHeight,\n                    color: getColor(barData),\n                    label: getTooltipLabel(barData),\n                }\n            })\n        )\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n) => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars = flattenDeep(\n        stackedData.map(stackedDataItem =>\n            yScale.domain().map((index, i) => {\n                const d = stackedDataItem[i]\n                const y = yScale(getIndex(d.data)) ?? 0\n                const x = (getX(d) ?? 0) + innerPadding * 0.5\n                const barWidth = getWidth(d, x) - innerPadding\n                const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n                const barData = {\n                    id: stackedDataItem.key,\n                    value: rawValue === null ? rawValue : value,\n                    formattedValue: formatValue(value),\n                    hidden: false,\n                    index: i,\n                    indexValue: index,\n                    data: filterNullValues(d.data),\n                }\n\n                return {\n                    key: `${stackedDataItem.key}.${index}`,\n                    data: barData,\n                    x,\n                    y,\n                    width: barWidth,\n                    height: barHeight,\n                    color: getColor(barData),\n                    label: getTooltipLabel(barData),\n                }\n            })\n        )\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep((stackedData as unknown) as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { BarDatum, BarLegendProps, BarSvgProps, BarsWithHidden, LegendLabelDatum } from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport { uniqBy } from 'lodash'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n) => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n) => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { BarDatum, BarItemProps } from './types'\nimport { animated } from '@react-spring/web'\nimport { createElement, useCallback } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: { height, transform, width, x, y, ...style },\n\n    borderRadius,\n    borderWidth,\n    borderColor,\n\n    label,\n    shouldRenderLabel,\n    labelColor,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) =>\n            showTooltipFromEvent(createElement(tooltip, { ...bar, ...data }), event),\n        [bar, data, showTooltipFromEvent, tooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(createElement(tooltip, { ...bar, ...data }), event)\n        },\n        [bar, data, onMouseEnter, showTooltipFromEvent, tooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={width}\n                height={height}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? style.color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={x}\n                    y={y}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n","import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { ComputedDatum } from './types'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ScaleBandSpec, ScaleSpec } from '@nivo/scales'\n\nexport const defaultProps = {\n    indexBy: 'id',\n    keys: ['value'],\n\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    reverse: false,\n\n    minValue: 'auto' as const,\n    maxValue: 'auto' as const,\n\n    valueScale: { type: 'linear' } as ScaleSpec,\n    indexScale: { type: 'band', round: true } as ScaleBandSpec,\n\n    padding: 0.1,\n    innerPadding: 0,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { from: 'theme', theme: 'labels.text.fill' },\n\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: <RawDatum>(datum: ComputedDatum<RawDatum>) => `${datum.id} - ${datum.indexValue}`,\n\n    legends: [],\n\n    annotations: [],\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'markers', 'legends', 'annotations'],\n    barComponent: BarItem,\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n}\n\nexport const canvasDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'legends', 'annotations'],\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { Axes, Grid } from '@nivo/axes'\nimport { BarAnnotations } from './BarAnnotations'\nimport {\n    BarDatum,\n    BarLayer,\n    BarLayerId,\n    BarSvgProps,\n    ComputedBarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n} from './types'\nimport { BarLegends } from './BarLegends'\nimport {\n    // @ts-ignore\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n    usePropertyAccessor,\n    useTheme,\n    useValueFormatter,\n} from '@nivo/core'\nimport { Fragment, ReactNode, createElement, useCallback, useMemo, useState } from 'react'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\nimport { svgDefaultProps } from './props'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { useTransition } from '@react-spring/web'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy = svgDefaultProps.indexBy,\n    keys = svgDefaultProps.keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode = svgDefaultProps.groupMode,\n    layout = svgDefaultProps.layout,\n    reverse = svgDefaultProps.reverse,\n    minValue = svgDefaultProps.minValue,\n    maxValue = svgDefaultProps.maxValue,\n\n    valueScale = svgDefaultProps.valueScale,\n    indexScale = svgDefaultProps.indexScale,\n\n    padding = svgDefaultProps.padding,\n    innerPadding = svgDefaultProps.innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel = svgDefaultProps.enableLabel,\n    label = svgDefaultProps.label,\n    labelSkipWidth = svgDefaultProps.labelSkipWidth,\n    labelSkipHeight = svgDefaultProps.labelSkipHeight,\n    labelTextColor = svgDefaultProps.labelTextColor,\n\n    markers,\n\n    colorBy = svgDefaultProps.colorBy,\n    colors = svgDefaultProps.colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel = svgDefaultProps.tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends = svgDefaultProps.legends,\n\n    role = svgDefaultProps.role,\n\n    initialHiddenIds,\n}: InnerBarProps<RawDatum>) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const formatValue = useValueFormatter(valueFormat)\n    const getBorderColor = useInheritedColor<ComputedBarDatum<RawDatum>>(borderColor, theme)\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getLabelColor = useInheritedColor<ComputedBarDatum<RawDatum>>(labelTextColor, theme)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const result = generateBars({\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width: innerWidth,\n        height: innerHeight,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n    })\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = result.bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, result.bars]\n    )\n\n    const barsWithValue = useMemo(\n        () =>\n            result.bars.filter(\n                (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n            ),\n        [result.bars]\n    )\n\n    const transition = useTransition(barsWithValue, {\n        keys: bar => bar.key,\n        enter: bar => ({\n            x: bar.width / 2,\n            y: bar.height / 2,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            transform: `translate(${bar.x}, ${bar.y})`,\n        }),\n        update: bar => ({\n            x: bar.width / 2,\n            y: bar.height / 2,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            transform: `translate(${bar.x}, ${bar.y})`,\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const shouldRenderLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipHeight, labelSkipWidth]\n    )\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, result.bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={result.bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={result.xScale as any}\n                yScale={result.yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderLabel(bar),\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar),\n                        borderColor: getBorderColor(bar),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (result.xScale as any) : null}\n                yScale={enableGridY ? (result.yScale as any) : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        const data = ([] as LegendData[]).concat(\n            ...legends.map(legend =>\n                getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : result.bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n            )\n        )\n\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                data={data}\n                legends={legends}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={result.xScale}\n                yScale={result.yScale}\n                theme={theme}\n            />\n        )\n    }\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: any = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            innerWidth,\n            innerHeight,\n            width,\n            height,\n            ...result,\n        }),\n        [commonProps, height, innerHeight, innerWidth, margin, result, width]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import {\n    BarCanvasLayer,\n    BarCanvasProps,\n    BarDatum,\n    ComputedBarDatum,\n    ComputedBarDatumWithValue,\n} from './types'\nimport {\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    usePropertyAccessor,\n    useTheme,\n    useValueFormatter,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\n\ndeclare module 'react' {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => React.ReactElement | null\n    ): (props: P & React.RefAttributes<T>) => React.ReactElement | null\n}\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy = canvasDefaultProps.indexBy,\n    keys = canvasDefaultProps.keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode = canvasDefaultProps.groupMode,\n    layout = canvasDefaultProps.layout,\n    reverse = canvasDefaultProps.reverse,\n    minValue = canvasDefaultProps.minValue,\n    maxValue = canvasDefaultProps.maxValue,\n\n    valueScale = canvasDefaultProps.valueScale,\n    indexScale = canvasDefaultProps.indexScale,\n\n    padding = canvasDefaultProps.padding,\n    innerPadding = canvasDefaultProps.innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = 'center'\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + width / 2, y + height / 2)\n        }\n    },\n\n    enableLabel = canvasDefaultProps.enableLabel,\n    label = canvasDefaultProps.label,\n    labelSkipWidth = canvasDefaultProps.labelSkipWidth,\n    labelSkipHeight = canvasDefaultProps.labelSkipHeight,\n    labelTextColor = canvasDefaultProps.labelTextColor,\n\n    colorBy = canvasDefaultProps.colorBy,\n    colors = canvasDefaultProps.colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor = canvasDefaultProps.borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel = canvasDefaultProps.tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends = canvasDefaultProps.legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const formatValue = useValueFormatter(valueFormat)\n    const getBorderColor = useInheritedColor<ComputedBarDatum<RawDatum>>(borderColor, theme)\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getLabelColor = useInheritedColor<ComputedBarDatum<RawDatum>>(labelTextColor, theme)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n\n    const options = {\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width: innerWidth,\n        height: innerHeight,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        formatValue,\n        getTooltipLabel,\n    }\n\n    const result =\n        groupMode === 'grouped' ? generateGroupedBars(options) : generateStackedBars(options)\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = result.bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: false } }\n            }),\n        [keys, result.bars]\n    )\n\n    const barsWithValue = useMemo(\n        () =>\n            result.bars.filter(\n                (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n            ),\n        [result.bars]\n    )\n\n    const shouldRenderLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipHeight, labelSkipWidth]\n    )\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: result.bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: any = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            margin,\n            innerWidth,\n            innerHeight,\n            width,\n            height,\n            ...result,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            height,\n            innerHeight,\n            innerWidth,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            margin,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            result,\n            tooltip,\n            width,\n        ]\n    )\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: result.xScale as any,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: result.yScale as any,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: result.xScale as any,\n                    yScale: result.yScale as any,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar),\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar),\n                        shouldRenderLabel: shouldRenderLabel(bar),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legends.forEach(legend => {\n                    const data = getLegendData({\n                        bars: legendData,\n                        direction: legend.direction,\n                        from: legend.dataFrom,\n                        groupMode,\n                        layout,\n                        legendLabel,\n                        reverse,\n                    })\n\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendData,\n        legendLabel,\n        legends,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        result.xScale,\n        result.yScale,\n        reverse,\n        shouldRenderLabel,\n        theme,\n        width,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!result.bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(result.bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, result.bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!result.bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(result.bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, result.bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!result.bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(result.bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, result.bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n","import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: Omit<BarSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: Omit<BarCanvasProps<RawDatum>, 'height' | 'width'>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas width={width} height={height} {...props} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n"],"names":["objectWithoutPropertiesLoose","defineProperty","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arrayWithHoles","iterableToArrayLimit","nonIterableRest","BarAnnotations","bars","annotations","boundAnnotations","useAnnotations","data","getPosition","bar","x","width","y","height","getDimensions","size","Math","max","_jsx","map","annotation","i","Annotation","BarLegends","legends","toggleSerie","legend","BoxLegendSvg","dataFrom","undefined","getIndexScale","getIndex","padding","indexScale","axis","computeScale","all","min","normalizeData","keys","item","reduce","acc","key","filterNullValues","Object","coerceValue","value","Number","gt","other","lt","flatten","array","concat","range","start","end","Array","from","repeat","_","index","clampToZero","zeroIfNotFinite","isFinite","generateVerticalGroupedBars","barWidth","reverse","yRef","formatValue","getColor","getTooltipLabel","innerPadding","xScale","yScale","compare","getY","d","getHeight","cleanedData","domain","length","rawValue","indexValue","barHeight","barData","id","formattedValue","hidden","color","label","generateHorizontalGroupedBars","xRef","getX","getWidth","generateGroupedBars","layout","minValue","maxValue","valueScale","indexScaleConfig","hiddenIds","props","filter","includes","otherAxis","scaleSpec","clampMin","values","entry","k","Boolean","scale","bandwidth","params","flattenDeep","arr","some","isArray","filterZerosIfLog","type","num","generateVerticalStackedBars","stackedData","stackedDataItem","generateHorizontalStackedBars","generateStackedBars","stack","offset","stackOffsetDiverging","getLegendDataForKeys","direction","groupMode","getLegendLabel","getLegendDataForIndexes","getLegendData","legendLabel","getPropertyAccessor","BarItem","style","transform","borderRadius","borderWidth","borderColor","shouldRenderLabel","labelColor","isInteractive","onClick","onMouseEnter","onMouseLeave","tooltip","theme","useTheme","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useCallback","event","handleTooltip","createElement","handleMouseEnter","handleMouseLeave","_jsxs","animated","fill","labels","text","pointerEvents","BarTooltip","BasicTooltip","defaultProps","indexBy","round","axisBottom","axisLeft","enableGridX","enableGridY","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","colorBy","colors","scheme","tooltipLabel","datum","svgDefaultProps","layers","barComponent","defs","animate","motionConfig","role","canvasDefaultProps","pixelRatio","window","devicePixelRatio","InnerBar","partialMargin","margin","axisTop","axisRight","gridXValues","gridYValues","markers","valueFormat","initialHiddenIds","useState","setHiddenIds","state","indexOf","useMotionConfig","springConfig","config","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","useValueFormatter","getBorderColor","useInheritedColor","useOrdinalColorScale","usePropertyAccessor","getLabel","getLabelColor","generateBars","result","legendData","useMemo","find","barsWithValue","transition","useTransition","enter","update","immediate","commonProps","boundDefs","bindDefs","dataKey","targetKey","layerById","axes","grid","Axes","Fragment","Grid","CartesianMarkers","layerContext","SvgWrapper","layer","Bar","renderWrapper","otherProps","Container","findBarUnderCursor","nodes","node","isCursorInRect","left","top","isNumber","InnerBarCanvas","renderBar","ctx","fillStyle","strokeStyle","lineWidth","beginPath","radius","moveTo","lineTo","quadraticCurveTo","closePath","rect","stroke","textBaseline","textAlign","fillText","canvasRef","canvasEl","useRef","options","useComputedAnnotations","useEffect","current","getContext","background","fillRect","translate","forEach","line","strokeWidth","renderGridLinesToCanvas","renderAxesToCanvas","right","bottom","renderLegendToCanvas","containerWidth","containerHeight","renderAnnotationsToCanvas","save","handleMouseHover","getRelativeCursor","canvas","cursor","BarCanvas","forwardRef","ref","ResponsiveBar","ResponsiveWrapper","ResponsiveBarCanvas"],"mappings":";;;;;;;;EAAe,SAAS,6BAA6B,CAAC,MAAM,EAAE,QAAQ,EAAE;EACxE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;EAChC,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;EAClB,EAAE,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACvC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;EAEb,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC1C,IAAI,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;EACxB,IAAI,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;EAC7C,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;EAC9B,GAAG;EAEH,EAAE,OAAO,MAAM,CAAC;EAChB;;ECZe,SAAS,wBAAwB,CAAC,MAAM,EAAE,QAAQ,EAAE;EACnE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;EAChC,EAAE,IAAI,MAAM,GAAGA,6BAA4B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;EAC9D,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;EAEb,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;EACpC,IAAI,IAAI,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;EAEhE,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAClD,MAAM,GAAG,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;EAC/C,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,SAAS;EAC7E,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;EAChC,KAAK;EACL,GAAG;EAEH,EAAE,OAAO,MAAM,CAAC;EAChB;;EClBe,SAAS,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;EACzD,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE;EAClB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;EACpC,MAAM,KAAK,EAAE,KAAK;EAClB,MAAM,UAAU,EAAE,IAAI;EACtB,MAAM,YAAY,EAAE,IAAI;EACxB,MAAM,QAAQ,EAAE,IAAI;EACpB,KAAK,CAAC,CAAC;EACP,GAAG,MAAM;EACT,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;EACrB,GAAG;EAEH,EAAE,OAAO,GAAG,CAAC;EACb;;ECXA,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE;EACzC,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAEjC,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;EACpC,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;EACvD,IAAI,IAAI,cAAc,EAAE,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;EAChE,MAAM,OAAO,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC;EACrE,KAAK,CAAC,CAAC;EACP,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;EACnC,GAAG;EAEH,EAAE,OAAO,IAAI,CAAC;EACd,CAAC;EAEc,SAAS,cAAc,CAAC,MAAM,EAAE;EAC/C,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC7C,IAAI,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EAE1D,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;EACf,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;EAC3D,QAAQC,eAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;EACjD,OAAO,CAAC,CAAC;EACT,KAAK,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAE;EACjD,MAAM,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC;EAChF,KAAK,MAAM;EACX,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;EACrD,QAAQ,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;EACzF,OAAO,CAAC,CAAC;EACT,KAAK;EACL,GAAG;EAEH,EAAE,OAAO,MAAM,CAAC;EAChB;;EClCe,SAAS,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE;EACpD,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;EAExD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EACvD,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACrB,GAAG;EAEH,EAAE,OAAO,IAAI,CAAC;EACd;;ECPe,SAAS,kBAAkB,CAAC,GAAG,EAAE;EAChD,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAOC,iBAAgB,CAAC,GAAG,CAAC,CAAC;EACvD;;ECHe,SAAS,gBAAgB,CAAC,IAAI,EAAE;EAC/C,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAChG;;ECDe,SAAS,2BAA2B,CAAC,CAAC,EAAE,MAAM,EAAE;EAC/D,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO;EACjB,EAAE,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,OAAOA,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;EAChE,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACzD,EAAE,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC;EAC9D,EAAE,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvD,EAAE,IAAI,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAOA,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;EAClH;;ECRe,SAAS,kBAAkB,GAAG;EAC7C,EAAE,MAAM,IAAI,SAAS,CAAC,sIAAsI,CAAC,CAAC;EAC9J;;ECEe,SAAS,kBAAkB,CAAC,GAAG,EAAE;EAChD,EAAE,OAAOC,kBAAiB,CAAC,GAAG,CAAC,IAAIC,gBAAe,CAAC,GAAG,CAAC,IAAIC,2BAA0B,CAAC,GAAG,CAAC,IAAIC,kBAAiB,EAAE,CAAC;EAClH;;ECNe,SAAS,eAAe,CAAC,GAAG,EAAE;EAC7C,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC;EACrC;;ECFe,SAAS,qBAAqB,CAAC,GAAG,EAAE,CAAC,EAAE;EACtD,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,EAAE,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO;EACjF,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC;EAChB,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;EAChB,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;EACjB,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC;EAErB,EAAE,IAAI;EACN,IAAI,KAAK,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE;EACxF,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;EAE1B,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM;EACxC,KAAK;EACL,GAAG,CAAC,OAAO,GAAG,EAAE;EAChB,IAAI,EAAE,GAAG,IAAI,CAAC;EACd,IAAI,EAAE,GAAG,GAAG,CAAC;EACb,GAAG,SAAS;EACZ,IAAI,IAAI;EACR,MAAM,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC;EACtD,KAAK,SAAS;EACd,MAAM,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC;EACvB,KAAK;EACL,GAAG;EAEH,EAAE,OAAO,IAAI,CAAC;EACd;;ECzBe,SAAS,gBAAgB,GAAG;EAC3C,EAAE,MAAM,IAAI,SAAS,CAAC,2IAA2I,CAAC,CAAC;EACnK;;ECEe,SAAS,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE;EAC/C,EAAE,OAAOC,eAAc,CAAC,GAAG,CAAC,IAAIC,qBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIH,2BAA0B,CAAC,GAAG,EAAE,CAAC,CAAC,IAAII,gBAAe,EAAE,CAAC;EACxH;;ECHO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAqE;EAAA,MAAvDC,IAAuD,QAAvDA,IAAuD;EAAA,MAAjDC,aAAiD,QAAjDA,WAAiD;EAC/F,MAAMC,gBAAgB,GAAGC,0BAAc,CAAC;EACpCC,IAAAA,IAAI,EAAEJ,IAD8B;EAEpCC,IAAAA,WAAW,EAAXA,aAFoC;EAGpCI,IAAAA,WAAW,EAAE,qBAAAC,GAAG;EAAA,aAAK;EACjBC,QAAAA,CAAC,EAAED,GAAG,CAACC,CAAJ,GAAQD,GAAG,CAACE,KAAJ,GAAY,CADN;EAEjBC,QAAAA,CAAC,EAAEH,GAAG,CAACG,CAAJ,GAAQH,GAAG,CAACI,MAAJ,GAAa;EAFP,OAAL;EAAA,KAHoB;EAOpCC,IAAAA,aAAa,EAAE;EAAA,UAAGD,MAAH,SAAGA,MAAH;EAAA,UAAWF,KAAX,SAAWA,KAAX;EAAA,aAAwB;EACnCA,QAAAA,KAAK,EAALA,KADmC;EAEnCE,QAAAA,MAAM,EAANA,MAFmC;EAGnCE,QAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL,CAASN,KAAT,EAAgBE,MAAhB;EAH6B,OAAxB;EAAA;EAPqB,GAAD,CAAvC;EAcA,SACIK;EAAA,cACKb,gBAAgB,CAACc,GAAjB,CAAqB,UAACC,UAAD,EAAaC,CAAb;EAAA,aAClBH,eAACI,sBAAD,qBAAwBF,UAAxB,GAAiBC,CAAjB,CADkB;EAAA,KAArB;EADL,IADJ;EAOH,CAtBM;;ECQA,IAAME,UAAU,GAAG,SAAbA,UAAa,OAMO;EAAA,MAL7BZ,KAK6B,QAL7BA,KAK6B;EAAA,MAJ7BE,MAI6B,QAJ7BA,MAI6B;EAAA,MAH7BW,SAG6B,QAH7BA,OAG6B;EAAA,MAF7BjB,IAE6B,QAF7BA,IAE6B;EAAA,MAD7BkB,WAC6B,QAD7BA,WAC6B;EAC7B,SACIP;EAAA,cACKM,SAAO,CAACL,GAAR,CAAY,UAACO,MAAD,EAASL,CAAT;EAAA;;EAAA,aACTH,eAACS,oBAAD,oCAEQD,MAFR;EAGI,QAAA,cAAc,EAAEf,KAHpB;EAII,QAAA,eAAe,EAAEE,MAJrB;EAKI,QAAA,IAAI,kBAAEa,MAAM,CAACnB,IAAT,uDAAiBA,IALzB;EAMI,QAAA,WAAW,EACPmB,MAAM,CAACD,WAAP,IAAsBC,MAAM,CAACE,QAAP,KAAoB,MAA1C,GAAmDH,WAAnD,GAAiEI;EAPzE,UACSR,CADT,CADS;EAAA,KAAZ;EADL,IADJ;EAgBH,CAvBM;;ECNA,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CACzBvB,IADyB,EAEzBwB,QAFyB,EAGzBC,OAHyB,EAIzBC,UAJyB,EAKzBlB,IALyB,EAMzBmB,IANyB,EAOxB;EACD,SAAQC,mBAAY,CAChBF,UADgB,EAEhB;EAAEG,IAAAA,GAAG,EAAE7B,IAAI,CAACY,GAAL,CAASY,QAAT,CAAP;EAA2BM,IAAAA,GAAG,EAAE,CAAhC;EAAmCpB,IAAAA,GAAG,EAAE;EAAxC,GAFgB,EAGhBF,IAHgB,EAIhBmB,IAJgB,CAAb,CAKiBF,OALjB,CAKyBA,OALzB,CAAP;EAMH,CAdM;EAmBA,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAAW/B,IAAX,EAA6BgC,IAA7B;EAAA,SACzBhC,IAAI,CAACY,GAAL,CACI,UAAAqB,IAAI;EAAA,6CAEOD,IAAI,CAACE,MAAL,CAAqC,UAACC,GAAD,EAAMC,GAAN,EAAc;EAClDD,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAW,IAAX;EACA,aAAOD,GAAP;EACH,KAHE,EAGA,EAHA,CAFP,GAMOF,IANP;EAAA,GADR,CADyB;EAAA,CAAtB;EAYA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAA2CrC,IAA3C;EAAA,SAC5BsC,MAAM,CAACN,IAAP,CAAYhC,IAAZ,EAAkBkC,MAAlB,CAAkD,UAACC,GAAD,EAAMC,GAAN,EAAc;EAC5D,QAAIpC,IAAI,CAACoC,GAAD,CAAR,EAAe;EACXD,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWpC,IAAI,CAACoC,GAAD,CAAf;EACH;;EACD,WAAOD,GAAP;EACH,GALD,EAKG,EALH,CAD4B;EAAA,CAAzB;EAQA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAIC,KAAJ;EAAA,SAAiB,CAACA,KAAD,EAAQC,MAAM,CAACD,KAAD,CAAd,CAAjB;EAAA,CAApB;;EC1BP,IAAME,EAAE,GAAG,SAALA,EAAK,CAACF,KAAD,EAAgBG,KAAhB;EAAA,SAAkCH,KAAK,GAAGG,KAA1C;EAAA,CAAX;;EACA,IAAMC,EAAE,GAAG,SAALA,EAAK,CAACJ,KAAD,EAAgBG,KAAhB;EAAA,SAAkCH,KAAK,GAAGG,KAA1C;EAAA,CAAX;;EAEA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAAIC,KAAJ;EAAA;;EAAA,SAAqB,QAAC,EAAD,EAAYC,MAAZ,gCAAsBD,KAAtB,EAArB;EAAA,CAAhB;;EACA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAgBC,GAAhB;EAAA,SACVC,KAAK,CAACC,IAAN,CAAW,IAAIC,MAAJ,CAAWH,GAAG,GAAGD,KAAjB,CAAX,EAAoC,UAACK,CAAD,EAAIC,KAAJ;EAAA,WAAcN,KAAK,GAAGM,KAAtB;EAAA,GAApC,CADU;EAAA,CAAd;;EAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAChB,KAAD;EAAA,SAAoBE,EAAE,CAACF,KAAD,EAAQ,CAAR,CAAF,GAAe,CAAf,GAAmBA,KAAvC;EAAA,CAApB;;EACA,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,CAACjB,KAAD;EAAA,SAAoBkB,QAAQ,CAAClB,KAAD,CAAR,GAAkBA,KAAlB,GAA0B,CAA9C;EAAA,CAAxB;;EAKA,IAAMmB,2BAA2B,GAAG,SAA9BA,2BAA8B,QAYhCC,QAZgC,EAahCC,OAbgC,EAchCC,IAdgC,EAe/B;EAAA,MAbG9D,IAaH,SAbGA,IAaH;EAAA,MAZG+D,WAYH,SAZGA,WAYH;EAAA,MAXGC,QAWH,SAXGA,QAWH;EAAA,MAVGxC,QAUH,SAVGA,QAUH;EAAA,MATGyC,eASH,SATGA,eASH;EAAA,iCARGC,YAQH;EAAA,MARGA,YAQH,mCARkB,CAQlB;EAAA,MAPGlC,IAOH,SAPGA,IAOH;EAAA,MANGmC,MAMH,SANGA,MAMH;EAAA,MALGC,MAKH,SALGA,MAKH;EACD,MAAMC,OAAO,GAAGR,OAAO,GAAGjB,EAAH,GAAQF,EAA/B;;EACA,MAAM4B,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD;EAAA;;EAAA,WAAgBF,OAAO,CAACE,CAAD,EAAI,CAAJ,CAAP,cAAgBH,MAAM,CAACG,CAAD,CAAtB,6CAA6B,CAA7B,GAAiCT,IAAjD;EAAA,GAAb;;EACA,MAAMU,SAAS,GAAG,SAAZA,SAAY,CAACD,CAAD,EAAYlE,CAAZ;EAAA;;EAAA,WAA2BgE,OAAO,CAACE,CAAD,EAAI,CAAJ,CAAP,GAAgBT,IAAI,GAAGzD,CAAvB,GAA2B,aAAC+D,MAAM,CAACG,CAAD,CAAP,+CAAc,CAAd,IAAmBT,IAAzE;EAAA,GAAlB;;EACA,MAAMW,WAAW,GAAGzE,IAAI,CAACY,GAAL,CAASyB,gBAAT,CAApB;EAEA,MAAMzC,IAAI,GAAGiD,OAAO,CAChBb,IAAI,CAACpB,GAAL,CAAS,UAACwB,GAAD,EAAMtB,CAAN;EAAA,WACLkC,KAAK,CAAC,CAAD,EAAImB,MAAM,CAACO,MAAP,GAAgBC,MAApB,CAAL,CAAiC/D,GAAjC,CAAqC,UAAA2C,KAAK,EAAI;EAAA;;EAAA,yBAChBhB,WAAW,CAACvC,IAAI,CAACuD,KAAD,CAAJ,CAAYnB,GAAZ,CAAD,CADK;EAAA;EAAA,UACnCwC,QADmC;EAAA,UACzBpC,KADyB;;EAE1C,UAAMqC,UAAU,GAAGrD,QAAQ,CAACxB,IAAI,CAACuD,KAAD,CAAL,CAA3B;EACA,UAAMpD,CAAC,GAAG,YAACgE,MAAM,CAACU,UAAD,CAAP,6CAAuB,CAAvB,IAA4BjB,QAAQ,GAAG9C,CAAvC,GAA2CoD,YAAY,GAAGpD,CAApE;EACA,UAAMT,CAAC,GAAGiE,IAAI,CAAC9B,KAAD,CAAd;EACA,UAAMsC,SAAS,GAAGN,SAAS,CAAChC,KAAD,EAAQnC,CAAR,CAA3B;EACA,UAAM0E,OAAO,GAAG;EACZC,QAAAA,EAAE,EAAE5C,GADQ;EAEZI,QAAAA,KAAK,EAAEoC,QAAQ,KAAK,IAAb,GAAoBA,QAApB,GAA+BpC,KAF1B;EAGZyC,QAAAA,cAAc,EAAElB,WAAW,CAACvB,KAAD,CAHf;EAIZ0C,QAAAA,MAAM,EAAE,KAJI;EAKZ3B,QAAAA,KAAK,EAALA,KALY;EAMZsB,QAAAA,UAAU,EAAVA,UANY;EAOZ7E,QAAAA,IAAI,EAAEyE,WAAW,CAAClB,KAAD;EAPL,OAAhB;EAUA,aAAO;EACHnB,QAAAA,GAAG,YAAKA,GAAL,cAAY2C,OAAO,CAACF,UAApB,CADA;EAEH7E,QAAAA,IAAI,EAAE+E,OAFH;EAGH5E,QAAAA,CAAC,EAADA,CAHG;EAIHE,QAAAA,CAAC,EAADA,CAJG;EAKHD,QAAAA,KAAK,EAAEwD,QALJ;EAMHtD,QAAAA,MAAM,EAAEwE,SANL;EAOHK,QAAAA,KAAK,EAAEnB,QAAQ,CAACe,OAAD,CAPZ;EAQHK,QAAAA,KAAK,EAAEnB,eAAe,CAACc,OAAD;EARnB,OAAP;EAUH,KA1BD,CADK;EAAA,GAAT,CADgB,CAApB;EAgCA,SAAOnF,IAAP;EACH,CAtDD;;EA2DA,IAAMyF,6BAA6B,GAAG,SAAhCA,6BAAgC,QAYlCP,SAZkC,EAalCjB,OAbkC,EAclCyB,IAdkC,EAejC;EAAA,MAbGtF,IAaH,SAbGA,IAaH;EAAA,MAZG+D,WAYH,SAZGA,WAYH;EAAA,MAXGvC,QAWH,SAXGA,QAWH;EAAA,MAVGwC,QAUH,SAVGA,QAUH;EAAA,MATGC,eASH,SATGA,eASH;EAAA,MARGjC,IAQH,SARGA,IAQH;EAAA,iCAPGkC,YAOH;EAAA,MAPGA,YAOH,mCAPkB,CAOlB;EAAA,MANGC,MAMH,SANGA,MAMH;EAAA,MALGC,MAKH,SALGA,MAKH;EACD,MAAMC,OAAO,GAAGR,OAAO,GAAGjB,EAAH,GAAQF,EAA/B;;EACA,MAAM6C,IAAI,GAAG,SAAPA,IAAO,CAAChB,CAAD;EAAA;;EAAA,WAAgBF,OAAO,CAACE,CAAD,EAAI,CAAJ,CAAP,GAAgBe,IAAhB,eAAuBnB,MAAM,CAACI,CAAD,CAA7B,+CAAoC,CAApD;EAAA,GAAb;;EACA,MAAMiB,QAAQ,GAAG,SAAXA,QAAW,CAACjB,CAAD,EAAYpE,CAAZ;EAAA;;EAAA,WAA2BkE,OAAO,CAACE,CAAD,EAAI,CAAJ,CAAP,GAAgB,aAACJ,MAAM,CAACI,CAAD,CAAP,+CAAc,CAAd,IAAmBe,IAAnC,GAA0CA,IAAI,GAAGnF,CAA5E;EAAA,GAAjB;;EACA,MAAMsE,WAAW,GAAGzE,IAAI,CAACY,GAAL,CAASyB,gBAAT,CAApB;EAEA,MAAMzC,IAAI,GAAGiD,OAAO,CAChBb,IAAI,CAACpB,GAAL,CAAS,UAACwB,GAAD,EAAMtB,CAAN;EAAA,WACLkC,KAAK,CAAC,CAAD,EAAIoB,MAAM,CAACM,MAAP,GAAgBC,MAApB,CAAL,CAAiC/D,GAAjC,CAAqC,UAAA2C,KAAK,EAAI;EAAA;;EAAA,0BAChBhB,WAAW,CAACvC,IAAI,CAACuD,KAAD,CAAJ,CAAYnB,GAAZ,CAAD,CADK;EAAA;EAAA,UACnCwC,QADmC;EAAA,UACzBpC,KADyB;;EAE1C,UAAMqC,UAAU,GAAGrD,QAAQ,CAACxB,IAAI,CAACuD,KAAD,CAAL,CAA3B;EACA,UAAMpD,CAAC,GAAGoF,IAAI,CAAC/C,KAAD,CAAd;EACA,UAAMnC,CAAC,GAAG,aAAC+D,MAAM,CAACS,UAAD,CAAP,+CAAuB,CAAvB,IAA4BC,SAAS,GAAGhE,CAAxC,GAA4CoD,YAAY,GAAGpD,CAArE;EACA,UAAM8C,QAAQ,GAAG4B,QAAQ,CAAChD,KAAD,EAAQrC,CAAR,CAAzB;EACA,UAAM4E,OAAO,GAAG;EACZC,QAAAA,EAAE,EAAE5C,GADQ;EAEZI,QAAAA,KAAK,EAAEoC,QAAQ,KAAK,IAAb,GAAoBA,QAApB,GAA+BpC,KAF1B;EAGZyC,QAAAA,cAAc,EAAElB,WAAW,CAACvB,KAAD,CAHf;EAIZ0C,QAAAA,MAAM,EAAE,KAJI;EAKZ3B,QAAAA,KAAK,EAALA,KALY;EAMZsB,QAAAA,UAAU,EAAVA,UANY;EAOZ7E,QAAAA,IAAI,EAAEyE,WAAW,CAAClB,KAAD;EAPL,OAAhB;EAUA,aAAO;EACHnB,QAAAA,GAAG,YAAKA,GAAL,cAAY2C,OAAO,CAACF,UAApB,CADA;EAEH7E,QAAAA,IAAI,EAAE+E,OAFH;EAGH5E,QAAAA,CAAC,EAADA,CAHG;EAIHE,QAAAA,CAAC,EAADA,CAJG;EAKHD,QAAAA,KAAK,EAAEwD,QALJ;EAMHtD,QAAAA,MAAM,EAAEwE,SANL;EAOHK,QAAAA,KAAK,EAAEnB,QAAQ,CAACe,OAAD,CAPZ;EAQHK,QAAAA,KAAK,EAAEnB,eAAe,CAACc,OAAD;EARnB,OAAP;EAUH,KA1BD,CADK;EAAA,GAAT,CADgB,CAApB;EAgCA,SAAOnF,IAAP;EACH,CAtDD;;EA2DO,IAAM6F,mBAAmB,GAAG,SAAtBA,mBAAsB,QAiC7B;EAAA;;EAAA,MAhCFC,MAgCE,SAhCFA,MAgCE;EAAA,MA/BFC,QA+BE,SA/BFA,QA+BE;EAAA,MA9BFC,QA8BE,SA9BFA,QA8BE;EAAA,MA7BF/B,OA6BE,SA7BFA,OA6BE;EAAA,MA5BFzD,KA4BE,SA5BFA,KA4BE;EAAA,MA3BFE,MA2BE,SA3BFA,MA2BE;EAAA,4BA1BFmB,OA0BE;EAAA,MA1BFA,OA0BE,8BA1BQ,CA0BR;EAAA,iCAzBFyC,YAyBE;EAAA,MAzBFA,YAyBE,mCAzBa,CAyBb;EAAA,MAxBF2B,UAwBE,SAxBFA,UAwBE;EAAA,MAvBUC,gBAuBV,SAvBFpE,UAuBE;EAAA,8BAtBFqE,SAsBE;EAAA,MAtBFA,SAsBE,gCAtBU,EAsBV;EAAA,MArBCC,KAqBD;;EACF,MAAMhE,IAAI,GAAGgE,KAAK,CAAChE,IAAN,CAAWiE,MAAX,CAAkB,UAAA7D,GAAG;EAAA,WAAI,CAAC2D,SAAS,CAACG,QAAV,CAAmB9D,GAAnB,CAAL;EAAA,GAArB,CAAb;EACA,MAAMpC,IAAI,GAAG+B,aAAa,CAACiE,KAAK,CAAChG,IAAP,EAAagC,IAAb,CAA1B;;EAFE,cAIE0D,MAAM,KAAK,UAAX,GAAyB,CAAC,GAAD,EAAM,GAAN,EAAWtF,KAAX,CAAzB,GAAwD,CAAC,GAAD,EAAM,GAAN,EAAWE,MAAX,CAJ1D;EAAA;EAAA,MAGKqB,IAHL;EAAA,MAGWwE,SAHX;EAAA,MAGsB3F,IAHtB;;EAKF,MAAMkB,UAAU,GAAGH,aAAa,CAC5BvB,IAD4B,EAE5BgG,KAAK,CAACxE,QAFsB,EAG5BC,OAH4B,EAI5BqE,gBAJ4B,EAK5BtF,IAL4B,EAM5B2F,SAN4B,CAAhC;;EASA,MAAMC,SAAS;EACX1F,IAAAA,GAAG,EAAEkF,QADM;EAEX9D,IAAAA,GAAG,EAAE6D,QAFM;EAGX9B,IAAAA,OAAO,EAAPA;EAHW,KAIRgC,UAJQ,CAAf;;EAOA,MAAMQ,QAAQ,GAAGD,SAAS,CAACtE,GAAV,KAAkB,MAAlB,GAA2B0B,WAA3B,GAAyC,UAAChB,KAAD;EAAA,WAAmBA,KAAnB;EAAA,GAA1D;EAEA,MAAM8D,MAAM,GAAGtG,IAAI,CACdkC,MADU,CACO,UAACC,GAAD,EAAMoE,KAAN;EAAA,wCAAoBpE,GAApB,sBAA4BH,IAAI,CAACpB,GAAL,CAAS,UAAA4F,CAAC;EAAA,aAAID,KAAK,CAACC,CAAD,CAAT;EAAA,KAAV,CAA5B;EAAA,GADP,EACuE,EADvE,EAEVP,MAFU,CAEHQ,OAFG,CAAf;EAGA,MAAM3E,GAAG,GAAGuE,QAAQ,CAAC5F,IAAI,CAACqB,GAAL,OAAArB,IAAI,qBAAQ6F,MAAR,EAAL,CAApB;EACA,MAAM5F,GAAG,GAAG+C,eAAe,CAAChD,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQ6F,MAAR,EAAL,CAA3B;EAEA,MAAMI,KAAK,GAAG9E,mBAAY,CACtBwE,SADsB,EAEtB;EAAEvE,IAAAA,GAAG,EAAEyE,MAAP;EAAexE,IAAAA,GAAG,EAAHA,GAAf;EAAoBpB,IAAAA,GAAG,EAAHA;EAApB,GAFsB,EAGtBiB,IAAI,KAAK,GAAT,GAAevB,KAAf,GAAuBE,MAHD,EAItBqB,IAJsB,CAA1B;;EA7BE,cAoCuB+D,MAAM,KAAK,UAAX,GAAwB,CAAChE,UAAD,EAAagF,KAAb,CAAxB,GAA8C,CAACA,KAAD,EAAQhF,UAAR,CApCrE;EAAA;EAAA,MAoCKyC,MApCL;EAAA,MAoCaC,MApCb;;EAsCF,MAAMuC,SAAS,GAAG,CAACjF,UAAU,CAACiF,SAAX,KAAyBzC,YAAY,IAAIlC,IAAI,CAAC2C,MAAL,GAAc,CAAlB,CAAtC,IAA8D3C,IAAI,CAAC2C,MAArF;EACA,MAAMiC,MAAM,GAAG,mCACNZ,KADM;EACChG,IAAAA,IAAI,EAAJA,IADD;EACOgC,IAAAA,IAAI,EAAJA,IADP;EACakC,IAAAA,YAAY,EAAZA,YADb;EAC2BC,IAAAA,MAAM,EAANA,MAD3B;EACmCC,IAAAA,MAAM,EAANA;EADnC,MAEXuC,SAFW,EAGXP,SAAS,CAACvC,OAHC,YAIX6C,KAAK,CAAC,CAAD,CAJM,2CAIC,CAJD,CAAf;EAOA,MAAM9G,IAAkC,GACpC+G,SAAS,GAAG,CAAZ,GACMjB,MAAM,KAAK,UAAX,GACI/B,2BAA2B,MAA3B,SAA+BiD,MAA/B,CADJ,GAEIvB,6BAA6B,MAA7B,SAAiCuB,MAAjC,CAHV,GAIM,EALV;EAOA,SAAO;EAAEzC,IAAAA,MAAM,EAANA,MAAF;EAAUC,IAAAA,MAAM,EAANA,MAAV;EAAkBxE,IAAAA,IAAI,EAAJA;EAAlB,GAAP;EACH,CAvFM;;EClIP,IAAMiH,WAAW,GAAG,SAAdA,WAAc,CAAIC,GAAJ;EAAA;;EAAA,SAChBA,GAAG,CAACC,IAAJ,CAAS5D,KAAK,CAAC6D,OAAf,IAA0BH,WAAW,CAAC,QAAC,EAAD,EAAY9D,MAAZ,gCAAsB+D,GAAtB,EAAD,CAArC,GAAsEA,GADtD;EAAA,CAApB;;EAGA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACnE,KAAD,EAAkBoE,IAAlB;EAAA,SACrBA,IAAI,KAAK,KAAT,GAAiBpE,KAAK,CAACmD,MAAN,CAAa,UAAAkB,GAAG;EAAA,WAAIA,GAAG,KAAK,CAAZ;EAAA,GAAhB,CAAjB,GAAkDrE,KAD7B;EAAA,CAAzB;;EAMA,IAAMsE,2BAA2B,GAAG,SAA9BA,2BAA8B,QAWhCxD,QAXgC,EAYhCC,OAZgC,EAa/B;EAAA,MAXGE,WAWH,SAXGA,WAWH;EAAA,MAVGC,QAUH,SAVGA,QAUH;EAAA,MATGxC,QASH,SATGA,QASH;EAAA,MARGyC,eAQH,SARGA,eAQH;EAAA,MAPGC,YAOH,SAPGA,YAOH;EAAA,MANGmD,WAMH,SANGA,WAMH;EAAA,MALGlD,MAKH,SALGA,MAKH;EAAA,MAJGC,MAIH,SAJGA,MAIH;;EACD,MAAME,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD;EAAA,WAA6BH,MAAM,CAACG,CAAC,CAACV,OAAO,GAAG,CAAH,GAAO,CAAf,CAAF,CAAnC;EAAA,GAAb;;EACA,MAAMW,SAAS,GAAG,SAAZA,SAAY,CAACD,CAAD,EAA0BlE,CAA1B;EAAA;;EAAA,WAAwC,YAAC+D,MAAM,CAACG,CAAC,CAACV,OAAO,GAAG,CAAH,GAAO,CAAf,CAAF,CAAP,6CAA+B,CAA/B,IAAoCxD,CAA5E;EAAA,GAAlB;;EAEA,MAAMT,IAAI,GAAGiH,WAAW,CACpBQ,WAAW,CAACzG,GAAZ,CAAgB,UAAA0G,eAAe;EAAA,WAC3BnD,MAAM,CAACO,MAAP,GAAgB9D,GAAhB,CAAoB,UAAC2C,KAAD,EAAQzC,CAAR,EAAc;EAAA;;EAC9B,UAAMyD,CAAC,GAAG+C,eAAe,CAACxG,CAAD,CAAzB;EACA,UAAMX,CAAC,cAAGgE,MAAM,CAAC3C,QAAQ,CAAC+C,CAAC,CAACvE,IAAH,CAAT,CAAT,6CAA+B,CAAtC;EACA,UAAMK,CAAC,GAAG,UAACiE,IAAI,CAACC,CAAD,CAAL,yCAAY,CAAZ,IAAiBL,YAAY,GAAG,GAA1C;EACA,UAAMY,SAAS,GAAGN,SAAS,CAACD,CAAD,EAAIlE,CAAJ,CAAT,GAAkB6D,YAApC;;EAJ8B,yBAKJ3B,WAAW,CAACgC,CAAC,CAACvE,IAAF,CAAOsH,eAAe,CAAClF,GAAvB,CAAD,CALP;EAAA;EAAA,UAKvBwC,QALuB;EAAA,UAKbpC,KALa;;EAO9B,UAAMuC,OAAO,GAAG;EACZC,QAAAA,EAAE,EAAEsC,eAAe,CAAClF,GADR;EAEZI,QAAAA,KAAK,EAAEoC,QAAQ,KAAK,IAAb,GAAoBA,QAApB,GAA+BpC,KAF1B;EAGZyC,QAAAA,cAAc,EAAElB,WAAW,CAACvB,KAAD,CAHf;EAIZ0C,QAAAA,MAAM,EAAE,KAJI;EAKZ3B,QAAAA,KAAK,EAAEzC,CALK;EAMZ+D,QAAAA,UAAU,EAAEtB,KANA;EAOZvD,QAAAA,IAAI,EAAEqC,gBAAgB,CAACkC,CAAC,CAACvE,IAAH;EAPV,OAAhB;EAUA,aAAO;EACHoC,QAAAA,GAAG,YAAKkF,eAAe,CAAClF,GAArB,cAA4BmB,KAA5B,CADA;EAEHvD,QAAAA,IAAI,EAAE+E,OAFH;EAGH5E,QAAAA,CAAC,EAADA,CAHG;EAIHE,QAAAA,CAAC,EAADA,CAJG;EAKHD,QAAAA,KAAK,EAAEwD,QALJ;EAMHtD,QAAAA,MAAM,EAAEwE,SANL;EAOHK,QAAAA,KAAK,EAAEnB,QAAQ,CAACe,OAAD,CAPZ;EAQHK,QAAAA,KAAK,EAAEnB,eAAe,CAACc,OAAD;EARnB,OAAP;EAUH,KA3BD,CAD2B;EAAA,GAA/B,CADoB,CAAxB;EAiCA,SAAOnF,IAAP;EACH,CAnDD;;EAwDA,IAAM2H,6BAA6B,GAAG,SAAhCA,6BAAgC,QAWlCzC,SAXkC,EAYlCjB,OAZkC,EAajC;EAAA,MAXGE,WAWH,SAXGA,WAWH;EAAA,MAVGC,QAUH,SAVGA,QAUH;EAAA,MATGxC,QASH,SATGA,QASH;EAAA,MARGyC,eAQH,SARGA,eAQH;EAAA,MAPGC,YAOH,SAPGA,YAOH;EAAA,MANGmD,WAMH,SANGA,WAMH;EAAA,MALGlD,MAKH,SALGA,MAKH;EAAA,MAJGC,MAIH,SAJGA,MAIH;;EACD,MAAMmB,IAAI,GAAG,SAAPA,IAAO,CAAChB,CAAD;EAAA,WAA6BJ,MAAM,CAACI,CAAC,CAACV,OAAO,GAAG,CAAH,GAAO,CAAf,CAAF,CAAnC;EAAA,GAAb;;EACA,MAAM2B,QAAQ,GAAG,SAAXA,QAAW,CAACjB,CAAD,EAA0BpE,CAA1B;EAAA;;EAAA,WAAwC,aAACgE,MAAM,CAACI,CAAC,CAACV,OAAO,GAAG,CAAH,GAAO,CAAf,CAAF,CAAP,+CAA+B,CAA/B,IAAoC1D,CAA5E;EAAA,GAAjB;;EAEA,MAAMP,IAAI,GAAGiH,WAAW,CACpBQ,WAAW,CAACzG,GAAZ,CAAgB,UAAA0G,eAAe;EAAA,WAC3BlD,MAAM,CAACM,MAAP,GAAgB9D,GAAhB,CAAoB,UAAC2C,KAAD,EAAQzC,CAAR,EAAc;EAAA;;EAC9B,UAAMyD,CAAC,GAAG+C,eAAe,CAACxG,CAAD,CAAzB;EACA,UAAMT,CAAC,eAAG+D,MAAM,CAAC5C,QAAQ,CAAC+C,CAAC,CAACvE,IAAH,CAAT,CAAT,+CAA+B,CAAtC;EACA,UAAMG,CAAC,GAAG,UAACoF,IAAI,CAAChB,CAAD,CAAL,yCAAY,CAAZ,IAAiBL,YAAY,GAAG,GAA1C;EACA,UAAMN,QAAQ,GAAG4B,QAAQ,CAACjB,CAAD,EAAIpE,CAAJ,CAAR,GAAiB+D,YAAlC;;EAJ8B,0BAKJ3B,WAAW,CAACgC,CAAC,CAACvE,IAAF,CAAOsH,eAAe,CAAClF,GAAvB,CAAD,CALP;EAAA;EAAA,UAKvBwC,QALuB;EAAA,UAKbpC,KALa;;EAO9B,UAAMuC,OAAO,GAAG;EACZC,QAAAA,EAAE,EAAEsC,eAAe,CAAClF,GADR;EAEZI,QAAAA,KAAK,EAAEoC,QAAQ,KAAK,IAAb,GAAoBA,QAApB,GAA+BpC,KAF1B;EAGZyC,QAAAA,cAAc,EAAElB,WAAW,CAACvB,KAAD,CAHf;EAIZ0C,QAAAA,MAAM,EAAE,KAJI;EAKZ3B,QAAAA,KAAK,EAAEzC,CALK;EAMZ+D,QAAAA,UAAU,EAAEtB,KANA;EAOZvD,QAAAA,IAAI,EAAEqC,gBAAgB,CAACkC,CAAC,CAACvE,IAAH;EAPV,OAAhB;EAUA,aAAO;EACHoC,QAAAA,GAAG,YAAKkF,eAAe,CAAClF,GAArB,cAA4BmB,KAA5B,CADA;EAEHvD,QAAAA,IAAI,EAAE+E,OAFH;EAGH5E,QAAAA,CAAC,EAADA,CAHG;EAIHE,QAAAA,CAAC,EAADA,CAJG;EAKHD,QAAAA,KAAK,EAAEwD,QALJ;EAMHtD,QAAAA,MAAM,EAAEwE,SANL;EAOHK,QAAAA,KAAK,EAAEnB,QAAQ,CAACe,OAAD,CAPZ;EAQHK,QAAAA,KAAK,EAAEnB,eAAe,CAACc,OAAD;EARnB,OAAP;EAUH,KA3BD,CAD2B;EAAA,GAA/B,CADoB,CAAxB;EAiCA,SAAOnF,IAAP;EACH,CAnDD;;EAwDO,IAAM4H,mBAAmB,GAAG,SAAtBA,mBAAsB,QAiC7B;EAAA,MAhCFxH,IAgCE,SAhCFA,IAgCE;EAAA,MA/BF0F,MA+BE,SA/BFA,MA+BE;EAAA,MA9BFC,QA8BE,SA9BFA,QA8BE;EAAA,MA7BFC,QA6BE,SA7BFA,QA6BE;EAAA,MA5BF/B,OA4BE,SA5BFA,OA4BE;EAAA,MA3BFzD,KA2BE,SA3BFA,KA2BE;EAAA,MA1BFE,MA0BE,SA1BFA,MA0BE;EAAA,4BAzBFmB,OAyBE;EAAA,MAzBFA,OAyBE,8BAzBQ,CAyBR;EAAA,MAxBFoE,UAwBE,SAxBFA,UAwBE;EAAA,MAvBUC,gBAuBV,SAvBFpE,UAuBE;EAAA,8BAtBFqE,SAsBE;EAAA,MAtBFA,SAsBE,gCAtBU,EAsBV;EAAA,MArBCC,KAqBD;;EACF,MAAMhE,IAAI,GAAGgE,KAAK,CAAChE,IAAN,CAAWiE,MAAX,CAAkB,UAAA7D,GAAG;EAAA,WAAI,CAAC2D,SAAS,CAACG,QAAV,CAAmB9D,GAAnB,CAAL;EAAA,GAArB,CAAb;EACA,MAAMiF,WAAW,GAAGI,aAAK,GAAqBzF,IAA1B,CAA+BA,IAA/B,EAAqC0F,MAArC,CAA4CC,4BAA5C,EAChB5F,aAAa,CAAC/B,IAAD,EAAOgC,IAAP,CADG,CAApB;;EAFE,cAOE0D,MAAM,KAAK,UAAX,GAAyB,CAAC,GAAD,EAAM,GAAN,EAAWtF,KAAX,CAAzB,GAAwD,CAAC,GAAD,EAAM,GAAN,EAAWE,MAAX,CAP1D;EAAA;EAAA,MAMKqB,IANL;EAAA,MAMWwE,SANX;EAAA,MAMsB3F,IANtB;;EAQF,MAAMkB,UAAU,GAAGH,aAAa,CAC5BvB,IAD4B,EAE5BgG,KAAK,CAACxE,QAFsB,EAG5BC,OAH4B,EAI5BqE,gBAJ4B,EAK5BtF,IAL4B,EAM5B2F,SAN4B,CAAhC;;EASA,MAAMC,SAAS;EACX1F,IAAAA,GAAG,EAAEkF,QADM;EAEX9D,IAAAA,GAAG,EAAE6D,QAFM;EAGX9B,IAAAA,OAAO,EAAPA;EAHW,KAIRgC,UAJQ,CAAf;;EAOA,MAAMS,MAAM,GAAGW,gBAAgB,CAC3BJ,WAAW,CAAEQ,WAAF,CADgB,EAE3BxB,UAAU,CAACqB,IAFgB,CAA/B;EAIA,MAAMpF,GAAG,GAAGrB,IAAI,CAACqB,GAAL,OAAArB,IAAI,qBAAQ6F,MAAR,EAAhB;EACA,MAAM5F,GAAG,GAAGD,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQ6F,MAAR,EAAhB;EAEA,MAAMI,KAAK,GAAG9E,mBAAY,CACtBwE,SADsB,EAEtB;EAAEvE,IAAAA,GAAG,EAAEyE,MAAP;EAAexE,IAAAA,GAAG,EAAHA,GAAf;EAAoBpB,IAAAA,GAAG,EAAHA;EAApB,GAFsB,EAGtBiB,IAAI,KAAK,GAAT,GAAevB,KAAf,GAAuBE,MAHD,EAItBqB,IAJsB,CAA1B;;EA/BE,cAsCuB+D,MAAM,KAAK,UAAX,GAAwB,CAAChE,UAAD,EAAagF,KAAb,CAAxB,GAA8C,CAACA,KAAD,EAAQhF,UAAR,CAtCrE;EAAA;EAAA,MAsCKyC,MAtCL;EAAA,MAsCaC,MAtCb;;EAwCF,MAAMF,YAAY,GAAG8B,KAAK,CAAC9B,YAAN,GAAqB,CAArB,GAAyB8B,KAAK,CAAC9B,YAA/B,GAA8C,CAAnE;EACA,MAAMyC,SAAS,GAAGjF,UAAU,CAACiF,SAAX,EAAlB;EACA,MAAMC,MAAM,GAAG,mCACNZ,KADM;EACC9B,IAAAA,YAAY,EAAZA,YADD;EACemD,IAAAA,WAAW,EAAXA,WADf;EAC4BlD,IAAAA,MAAM,EAANA,MAD5B;EACoCC,IAAAA,MAAM,EAANA;EADpC,MAEXuC,SAFW,EAGXP,SAAS,CAACvC,OAHC,CAAf;EAMA,MAAMjE,IAAkC,GACpC+G,SAAS,GAAG,CAAZ,GACMjB,MAAM,KAAK,UAAX,GACI0B,2BAA2B,MAA3B,SAA+BR,MAA/B,CADJ,GAEIW,6BAA6B,MAA7B,SAAiCX,MAAjC,CAHV,GAIM,EALV;EAOA,SAAO;EAAEzC,IAAAA,MAAM,EAANA,MAAF;EAAUC,IAAAA,MAAM,EAANA,MAAV;EAAkBxE,IAAAA,IAAI,EAAJA;EAAlB,GAAP;EACH,CAzFM;;ECxIA,IAAMgI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAChChI,IADgC,EAEhC8F,MAFgC,EAGhCmC,SAHgC,EAIhCC,SAJgC,EAKhCjE,OALgC,EAMhCkE,cANgC,EAO/B;EACD,MAAM/H,IAAI,GAAG,QACTJ,IAAI,CAACgB,GAAL,CAAS,UAAAV,GAAG;EAAA;;EAAA,WAAK;EACb8E,MAAAA,EAAE,EAAE9E,GAAG,CAACF,IAAJ,CAASgF,EADA;EAEbI,MAAAA,KAAK,EAAE2C,cAAc,CAAC7H,GAAG,CAACF,IAAL,CAFR;EAGbkF,MAAAA,MAAM,EAAEhF,GAAG,CAACF,IAAJ,CAASkF,MAHJ;EAIbC,MAAAA,KAAK,gBAAEjF,GAAG,CAACiF,KAAN,mDAAe;EAJP,KAAL;EAAA,GAAZ,CADS,EAOT;EAAA,QAAGH,EAAH,QAAGA,EAAH;EAAA,WAAYA,EAAZ;EAAA,GAPS,CAAb;;EAUA,MACKU,MAAM,KAAK,UAAX,IACGoC,SAAS,KAAK,SADjB,IAEGD,SAAS,KAAK,QAFjB,IAGGhE,OAAO,KAAK,IAHhB,IAIC6B,MAAM,KAAK,YAAX,IAA2BoC,SAAS,KAAK,SAAzC,IAAsDjE,OAAO,KAAK,IALvE,EAME;EACE7D,IAAAA,IAAI,CAAC6D,OAAL;EACH;;EAED,SAAO7D,IAAP;EACH,CA7BM;EA+BA,IAAMgI,uBAAuB,GAAG,SAA1BA,uBAA0B,CACnCpI,IADmC,EAEnC8F,MAFmC,EAGnCqC,cAHmC,EAIlC;EACD,MAAM/H,IAAI,GAAG,QACTJ,IAAI,CAACgB,GAAL,CAAS,UAAAV,GAAG;EAAA;;EAAA,WAAK;EACb8E,MAAAA,EAAE,0BAAE9E,GAAG,CAACF,IAAJ,CAAS6E,UAAX,uEAAyB,EADd;EAEbO,MAAAA,KAAK,EAAE2C,cAAc,CAAC7H,GAAG,CAACF,IAAL,CAFR;EAGbkF,MAAAA,MAAM,EAAEhF,GAAG,CAACF,IAAJ,CAASkF,MAHJ;EAIbC,MAAAA,KAAK,iBAAEjF,GAAG,CAACiF,KAAN,qDAAe;EAJP,KAAL;EAAA,GAAZ,CADS,EAOT;EAAA,QAAGH,EAAH,SAAGA,EAAH;EAAA,WAAYA,EAAZ;EAAA,GAPS,CAAb;;EAUA,MAAIU,MAAM,KAAK,YAAf,EAA6B;EACzB1F,IAAAA,IAAI,CAAC6D,OAAL;EACH;;EAED,SAAO7D,IAAP;EACH,CApBM;EAsBA,IAAMiI,aAAa,GAAG,SAAhBA,aAAgB,QAavB;EAAA,MAZFrI,IAYE,SAZFA,IAYE;EAAA,MAXFiI,SAWE,SAXFA,SAWE;EAAA,MAVFzE,IAUE,SAVFA,IAUE;EAAA,MATF0E,SASE,SATFA,SASE;EAAA,MARFpC,MAQE,SARFA,MAQE;EAAA,MAPFwC,WAOE,SAPFA,WAOE;EAAA,MANFrE,OAME,SANFA,OAME;EACF,MAAMkE,cAAc,GAAGI,wBAAmB,CACtCD,WADsC,aACtCA,WADsC,cACtCA,WADsC,GACtB9E,IAAI,KAAK,SAAT,GAAqB,YAArB,GAAoC,IADd,CAA1C;;EAIA,MAAIA,IAAI,KAAK,SAAb,EAAwB;EACpB,WAAO4E,uBAAuB,CAACpI,IAAD,EAAO8F,MAAP,EAAeqC,cAAf,CAA9B;EACH;;EAED,SAAOH,oBAAoB,CAAChI,IAAD,EAAO8F,MAAP,EAAemC,SAAf,EAA0BC,SAA1B,EAAqCjE,OAArC,EAA8CkE,cAA9C,CAA3B;EACH,CAvBM;;MCnDMK,OAAO,GAAG,SAAVA,OAAU,OAmBO;EAAA;;EAAA,sBAlB1BlI,GAkB0B;EAAA,MAlBnBF,IAkBmB,YAlBnBA,IAkBmB;EAAA,MAlBVE,GAkBU;EAAA,wBAhB1BmI,KAgB0B;EAAA,MAhBjB/H,MAgBiB,cAhBjBA,MAgBiB;EAAA,MAhBTgI,SAgBS,cAhBTA,SAgBS;EAAA,MAhBElI,KAgBF,cAhBEA,KAgBF;EAAA,MAhBSD,CAgBT,cAhBSA,CAgBT;EAAA,MAhBYE,CAgBZ,cAhBYA,CAgBZ;EAAA,MAhBkBgI,KAgBlB;EAAA,MAd1BE,YAc0B,QAd1BA,YAc0B;EAAA,MAb1BC,WAa0B,QAb1BA,WAa0B;EAAA,MAZ1BC,WAY0B,QAZ1BA,WAY0B;EAAA,MAV1BrD,KAU0B,QAV1BA,KAU0B;EAAA,MAT1BsD,iBAS0B,QAT1BA,iBAS0B;EAAA,MAR1BC,UAQ0B,QAR1BA,UAQ0B;EAAA,MAN1BC,aAM0B,QAN1BA,aAM0B;EAAA,MAL1BC,OAK0B,QAL1BA,OAK0B;EAAA,MAJ1BC,YAI0B,QAJ1BA,YAI0B;EAAA,MAH1BC,YAG0B,QAH1BA,YAG0B;EAAA,MAD1BC,SAC0B,QAD1BA,OAC0B;;EAC1B,MAAMC,KAAK,GAAGC,aAAQ,EAAtB;;EAD0B,oBAEoBC,kBAAU,EAF9B;EAAA,MAElBC,oBAFkB,eAElBA,oBAFkB;EAAA,MAEIC,WAFJ,eAEIA,WAFJ;;EAI1B,MAAMC,WAAW,GAAGC,iBAAW,CAC3B,UAACC,KAAD,EAA6C;EACzCX,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;EAAK1D,MAAAA,KAAK,EAAEjF,GAAG,CAACiF;EAAhB,OAA0BnF,IAA1B,GAAkCwJ,KAAlC,CAAP;EACH,GAH0B,EAI3B,CAACtJ,GAAD,EAAMF,IAAN,EAAY6I,OAAZ,CAJ2B,CAA/B;EAMA,MAAMY,aAAa,GAAGF,iBAAW,CAC7B,UAACC,KAAD;EAAA,WACIJ,oBAAoB,CAACM,mBAAa,CAACV,SAAD,oCAAe9I,GAAf,GAAuBF,IAAvB,EAAd,EAA8CwJ,KAA9C,CADxB;EAAA,GAD6B,EAG7B,CAACtJ,GAAD,EAAMF,IAAN,EAAYoJ,oBAAZ,EAAkCJ,SAAlC,CAH6B,CAAjC;EAKA,MAAMW,gBAAgB,GAAGJ,iBAAW,CAChC,UAACC,KAAD,EAA6C;EACzCV,IAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAG9I,IAAH,EAASwJ,KAAT,CAAZ;EACAJ,IAAAA,oBAAoB,CAACM,mBAAa,CAACV,SAAD,oCAAe9I,GAAf,GAAuBF,IAAvB,EAAd,EAA8CwJ,KAA9C,CAApB;EACH,GAJ+B,EAKhC,CAACtJ,GAAD,EAAMF,IAAN,EAAY8I,YAAZ,EAA0BM,oBAA1B,EAAgDJ,SAAhD,CALgC,CAApC;EAOA,MAAMY,gBAAgB,GAAGL,iBAAW,CAChC,UAACC,KAAD,EAA6C;EACzCT,IAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAG/I,IAAH,EAASwJ,KAAT,CAAZ;EACAH,IAAAA,WAAW;EACd,GAJ+B,EAKhC,CAACrJ,IAAD,EAAOqJ,WAAP,EAAoBN,YAApB,CALgC,CAApC;EAQA,SACIc,gBAACC,YAAD,CAAU,CAAV;EAAY,IAAA,SAAS,EAAExB,SAAvB;EAAA,eACI3H,eAACmJ,YAAD,CAAU,IAAV;EACI,MAAA,KAAK,EAAE1J,KADX;EAEI,MAAA,MAAM,EAAEE,MAFZ;EAGI,MAAA,EAAE,EAAEiI,YAHR;EAII,MAAA,EAAE,EAAEA,YAJR;EAKI,MAAA,IAAI,gBAAEvI,IAAI,CAAC+J,IAAP,mDAAe1B,KAAK,CAAClD,KAL7B;EAMI,MAAA,WAAW,EAAEqD,WANjB;EAOI,MAAA,MAAM,EAAEC,WAPZ;EAQI,MAAA,YAAY,EAAEG,aAAa,GAAGe,gBAAH,GAAsBrI,SARrD;EASI,MAAA,WAAW,EAAEsH,aAAa,GAAGa,aAAH,GAAmBnI,SATjD;EAUI,MAAA,YAAY,EAAEsH,aAAa,GAAGgB,gBAAH,GAAsBtI,SAVrD;EAWI,MAAA,OAAO,EAAEsH,aAAa,GAAGU,WAAH,GAAiBhI;EAX3C,MADJ,EAcKoH,iBAAiB,IACd/H,eAACmJ,YAAD,CAAU,IAAV;EACI,MAAA,CAAC,EAAE3J,CADP;EAEI,MAAA,CAAC,EAAEE,CAFP;EAGI,MAAA,UAAU,EAAC,QAHf;EAII,MAAA,gBAAgB,EAAC,SAJrB;EAKI,MAAA,KAAK,oCACE4I,KAAK,CAACe,MAAN,CAAaC,IADf;EAEDC,QAAAA,aAAa,EAAE,MAFd;EAGDH,QAAAA,IAAI,EAAEpB;EAHL,QALT;EAAA,gBAWKvD;EAXL,MAfR;EAAA,IADJ;EAgCH;;ECpFM,IAAM+E,UAAU,GAAG,SAAbA,UAAa,OAAqE;EAAA,MAAvDhF,KAAuD,QAAvDA,KAAuD;EAAA,MAAhDC,KAAgD,QAAhDA,KAAgD;EAAA,MAAtCpF,IAAsC;;EAC3F,SAAOW,eAACyJ,oBAAD;EAAc,IAAA,EAAE,EAAEhF,KAAlB;EAAyB,IAAA,KAAK,EAAEpF,IAAI,CAACiF,cAArC;EAAqD,IAAA,UAAU,EAAE,IAAjE;EAAuE,IAAA,KAAK,EAAEE;EAA9E,IAAP;EACH,CAFM;;;MCGMkF,YAAY,GAAG;EACxBC,EAAAA,OAAO,EAAE,IADe;EAExBtI,EAAAA,IAAI,EAAE,CAAC,OAAD,CAFkB;EAIxB8F,EAAAA,SAAS,EAAE,SAJa;EAKxBpC,EAAAA,MAAM,EAAE,UALgB;EAMxB7B,EAAAA,OAAO,EAAE,KANe;EAQxB8B,EAAAA,QAAQ,EAAE,MARc;EASxBC,EAAAA,QAAQ,EAAE,MATc;EAWxBC,EAAAA,UAAU,EAAE;EAAEqB,IAAAA,IAAI,EAAE;EAAR,GAXY;EAYxBxF,EAAAA,UAAU,EAAE;EAAEwF,IAAAA,IAAI,EAAE,MAAR;EAAgBqD,IAAAA,KAAK,EAAE;EAAvB,GAZY;EAcxB9I,EAAAA,OAAO,EAAE,GAde;EAexByC,EAAAA,YAAY,EAAE,CAfU;EAiBxBsG,EAAAA,UAAU,EAAE,EAjBY;EAkBxBC,EAAAA,QAAQ,EAAE,EAlBc;EAmBxBC,EAAAA,WAAW,EAAE,KAnBW;EAoBxBC,EAAAA,WAAW,EAAE,IApBW;EAsBxBC,EAAAA,WAAW,EAAE,IAtBW;EAuBxBxF,EAAAA,KAAK,EAAE,gBAvBiB;EAwBxByF,EAAAA,cAAc,EAAE,CAxBQ;EAyBxBC,EAAAA,eAAe,EAAE,CAzBO;EA0BxBC,EAAAA,cAAc,EAAE;EAAE3H,IAAAA,IAAI,EAAE,OAAR;EAAiB6F,IAAAA,KAAK,EAAE;EAAxB,GA1BQ;EA4BxB+B,EAAAA,OAAO,EAAE,IA5Be;EA6BxBC,EAAAA,MAAM,EAAE;EAAEC,IAAAA,MAAM,EAAE;EAAV,GA7BgB;EA+BxB3C,EAAAA,YAAY,EAAE,CA/BU;EAgCxBC,EAAAA,WAAW,EAAE,CAhCW;EAiCxBC,EAAAA,WAAW,EAAE;EAAErF,IAAAA,IAAI,EAAE;EAAR,GAjCW;EAmCxBwF,EAAAA,aAAa,EAAE,IAnCS;EAoCxBI,EAAAA,OAAO,EAAEmB,UApCe;EAqCxBgB,EAAAA,YAAY,EAAE,sBAAWC,KAAX;EAAA,qBAAiDA,KAAK,CAACpG,EAAvD,gBAA+DoG,KAAK,CAACvG,UAArE;EAAA,GArCU;EAuCxB5D,EAAAA,OAAO,EAAE,EAvCe;EAyCxBpB,EAAAA,WAAW,EAAE;EAzCW;MA4CfwL,eAAe,qCACrBhB,YADqB;EAExBiB,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,SAAzB,EAAoC,SAApC,EAA+C,aAA/C,CAFgB;EAGxBC,EAAAA,YAAY,EAAEnD,OAHU;EAKxBoD,EAAAA,IAAI,EAAE,EALkB;EAMxBzB,EAAAA,IAAI,EAAE,EANkB;EAQxB0B,EAAAA,OAAO,EAAE,IARe;EASxBC,EAAAA,YAAY,EAAE,SATU;EAWxBC,EAAAA,IAAI,EAAE;EAXkB;MAcfC,kBAAkB,qCACxBvB,YADwB;EAE3BiB,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,SAAzB,EAAoC,aAApC,CAFmB;EAI3BO,EAAAA,UAAU,EAAE,OAAOC,MAAP,KAAkB,WAAlB,4BAAgCA,MAAM,CAACC,gBAAvC,yEAA2D,CAA3D,GAA+D;EAJhD;;EC5B/B,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAmEc;EAAA,MAlE3BhM,IAkE2B,QAlE3BA,IAkE2B;EAAA,0BAjE3BsK,OAiE2B;EAAA,MAjE3BA,OAiE2B,6BAjEjBe,eAAe,CAACf,OAiEC;EAAA,uBAhE3BtI,IAgE2B;EAAA,MAhE3BA,IAgE2B,0BAhEpBqJ,eAAe,CAACrJ,IAgEI;EAAA,MA9DnBiK,aA8DmB,QA9D3BC,MA8D2B;EAAA,MA7D3B9L,KA6D2B,QA7D3BA,KA6D2B;EAAA,MA5D3BE,MA4D2B,QA5D3BA,MA4D2B;EAAA,4BA1D3BwH,SA0D2B;EAAA,MA1D3BA,SA0D2B,+BA1DfuD,eAAe,CAACvD,SA0DD;EAAA,yBAzD3BpC,MAyD2B;EAAA,MAzD3BA,MAyD2B,4BAzDlB2F,eAAe,CAAC3F,MAyDE;EAAA,0BAxD3B7B,OAwD2B;EAAA,MAxD3BA,OAwD2B,6BAxDjBwH,eAAe,CAACxH,OAwDC;EAAA,2BAvD3B8B,QAuD2B;EAAA,MAvD3BA,QAuD2B,8BAvDhB0F,eAAe,CAAC1F,QAuDA;EAAA,2BAtD3BC,QAsD2B;EAAA,MAtD3BA,QAsD2B,8BAtDhByF,eAAe,CAACzF,QAsDA;EAAA,6BApD3BC,UAoD2B;EAAA,MApD3BA,UAoD2B,gCApDdwF,eAAe,CAACxF,UAoDF;EAAA,6BAnD3BnE,UAmD2B;EAAA,MAnD3BA,UAmD2B,gCAnDd2J,eAAe,CAAC3J,UAmDF;EAAA,0BAjD3BD,OAiD2B;EAAA,MAjD3BA,OAiD2B,6BAjDjB4J,eAAe,CAAC5J,OAiDC;EAAA,+BAhD3ByC,YAgD2B;EAAA,MAhD3BA,YAgD2B,kCAhDZmH,eAAe,CAACnH,YAgDJ;EAAA,MA9C3BiI,OA8C2B,QA9C3BA,OA8C2B;EAAA,MA7C3BC,SA6C2B,QA7C3BA,SA6C2B;EAAA,6BA5C3B5B,UA4C2B;EAAA,MA5C3BA,UA4C2B,gCA5Cda,eAAe,CAACb,UA4CF;EAAA,2BA3C3BC,QA2C2B;EAAA,MA3C3BA,QA2C2B,8BA3ChBY,eAAe,CAACZ,QA2CA;EAAA,8BA1C3BC,WA0C2B;EAAA,MA1C3BA,WA0C2B,iCA1CbW,eAAe,CAACX,WA0CH;EAAA,8BAzC3BC,WAyC2B;EAAA,MAzC3BA,WAyC2B,iCAzCbU,eAAe,CAACV,WAyCH;EAAA,MAxC3B0B,WAwC2B,QAxC3BA,WAwC2B;EAAA,MAvC3BC,WAuC2B,QAvC3BA,WAuC2B;EAAA,yBArC3BhB,MAqC2B;EAAA,MArC3BA,MAqC2B,4BArClBD,eAAe,CAACC,MAqCE;EAAA,+BApC3BC,YAoC2B;EAAA,MApC3BA,YAoC2B,kCApCZF,eAAe,CAACE,YAoCJ;EAAA,8BAlC3BX,WAkC2B;EAAA,MAlC3BA,WAkC2B,iCAlCbS,eAAe,CAACT,WAkCH;EAAA,wBAjC3BxF,KAiC2B;EAAA,MAjC3BA,KAiC2B,2BAjCnBiG,eAAe,CAACjG,KAiCG;EAAA,iCAhC3ByF,cAgC2B;EAAA,MAhC3BA,cAgC2B,oCAhCVQ,eAAe,CAACR,cAgCN;EAAA,kCA/B3BC,eA+B2B;EAAA,MA/B3BA,eA+B2B,qCA/BTO,eAAe,CAACP,eA+BP;EAAA,iCA9B3BC,cA8B2B;EAAA,MA9B3BA,cA8B2B,oCA9BVM,eAAe,CAACN,cA8BN;EAAA,MA5B3BwB,OA4B2B,QA5B3BA,OA4B2B;EAAA,0BA1B3BvB,OA0B2B;EAAA,MA1B3BA,OA0B2B,6BA1BjBK,eAAe,CAACL,OA0BC;EAAA,yBAzB3BC,MAyB2B;EAAA,MAzB3BA,QAyB2B,4BAzBlBI,eAAe,CAACJ,MAyBE;EAAA,uBAxB3BO,IAwB2B;EAAA,MAxB3BA,IAwB2B,0BAxBpBH,eAAe,CAACG,IAwBI;EAAA,uBAvB3BzB,IAuB2B;EAAA,MAvB3BA,IAuB2B,0BAvBpBsB,eAAe,CAACtB,IAuBI;EAAA,+BAtB3BxB,YAsB2B;EAAA,MAtB3BA,YAsB2B,kCAtBZ8C,eAAe,CAAC9C,YAsBJ;EAAA,8BArB3BC,WAqB2B;EAAA,MArB3BA,WAqB2B,iCArBb6C,eAAe,CAAC7C,WAqBH;EAAA,8BApB3BC,WAoB2B;EAAA,MApB3BA,WAoB2B,iCApBb4C,eAAe,CAAC5C,WAoBH;EAAA,8BAlB3B5I,WAkB2B;EAAA,MAlB3BA,WAkB2B,iCAlBbwL,eAAe,CAACxL,WAkBH;EAAA,MAhB3BqI,WAgB2B,QAhB3BA,WAgB2B;EAAA,+BAf3BiD,YAe2B;EAAA,MAf3BA,YAe2B,kCAfZE,eAAe,CAACF,YAeJ;EAAA,MAb3BqB,WAa2B,QAb3BA,WAa2B;EAAA,gCAX3B5D,aAW2B;EAAA,MAX3BA,aAW2B,mCAXXyC,eAAe,CAACzC,aAWL;EAAA,0BAV3BI,OAU2B;EAAA,MAV3BA,OAU2B,6BAVjBqC,eAAe,CAACrC,OAUC;EAAA,MAT3BH,OAS2B,QAT3BA,OAS2B;EAAA,MAR3BC,YAQ2B,QAR3BA,YAQ2B;EAAA,MAP3BC,YAO2B,QAP3BA,YAO2B;EAAA,0BAL3B9H,OAK2B;EAAA,MAL3BA,OAK2B,6BALjBoK,eAAe,CAACpK,OAKC;EAAA,uBAH3B0K,IAG2B;EAAA,MAH3BA,IAG2B,0BAHpBN,eAAe,CAACM,IAGI;EAAA,MAD3Bc,gBAC2B,QAD3BA,gBAC2B;;EAAA,kBACOC,cAAQ,CAACD,gBAAD,aAACA,gBAAD,cAACA,gBAAD,GAAqB,EAArB,CADf;EAAA;EAAA,MACpB1G,SADoB;EAAA,MACT4G,YADS;;EAE3B,MAAMzL,WAAW,GAAGqI,iBAAW,CAAC,UAAAvE,EAAE,EAAI;EAClC2H,IAAAA,YAAY,CAAC,UAAAC,KAAK;EAAA,aACdA,KAAK,CAACC,OAAN,CAAc7H,EAAd,IAAoB,CAAC,CAArB,GAAyB4H,KAAK,CAAC3G,MAAN,CAAa,UAAAhE,IAAI;EAAA,eAAIA,IAAI,KAAK+C,EAAb;EAAA,OAAjB,CAAzB,gCAAiE4H,KAAjE,IAAwE5H,EAAxE,EADc;EAAA,KAAN,CAAZ;EAGH,GAJ8B,EAI5B,EAJ4B,CAA/B;EAMA,MAAMiE,KAAK,GAAGC,aAAQ,EAAtB;;EAR2B,yBASe4D,oBAAe,EAT9B;EAAA,MASnBrB,OATmB,oBASnBA,OATmB;EAAA,MASFsB,YATE,oBASVC,MATU;;EAAA,uBAU0CC,kBAAa,CAC9E7M,KAD8E,EAE9EE,MAF8E,EAG9E2L,aAH8E,CAVvD;EAAA,MAUnBiB,UAVmB,kBAUnBA,UAVmB;EAAA,MAUPC,WAVO,kBAUPA,WAVO;EAAA,MAUMjB,MAVN,kBAUMA,MAVN;EAAA,MAUckB,UAVd,kBAUcA,UAVd;EAAA,MAU0BC,WAV1B,kBAU0BA,WAV1B;;EAgB3B,MAAMtJ,WAAW,GAAGuJ,sBAAiB,CAACd,WAAD,CAArC;EACA,MAAMe,cAAc,GAAGC,wBAAiB,CAA6B/E,WAA7B,EAA0CQ,KAA1C,CAAxC;EACA,MAAMjF,QAAQ,GAAGyJ,2BAAoB,CAACxC,QAAD,EAASD,OAAT,CAArC;EACA,MAAMxJ,QAAQ,GAAGkM,wBAAmB,CAACpD,OAAD,CAApC;EACA,MAAMqD,QAAQ,GAAGD,wBAAmB,CAACtI,KAAD,CAApC;EACA,MAAMwI,aAAa,GAAGJ,wBAAiB,CAA6BzC,cAA7B,EAA6C9B,KAA7C,CAAvC;EACA,MAAMhF,eAAe,GAAGyJ,wBAAmB,CAACvC,YAAD,CAA3C;EAEA,MAAM0C,YAAY,GAAG/F,SAAS,KAAK,SAAd,GAA0BrC,mBAA1B,GAAgD+B,mBAArE;EACA,MAAMsG,MAAM,GAAGD,YAAY,CAAC;EACxBnI,IAAAA,MAAM,EAANA,MADwB;EAExB7B,IAAAA,OAAO,EAAPA,OAFwB;EAGxB7D,IAAAA,IAAI,EAAJA,IAHwB;EAIxBwB,IAAAA,QAAQ,EAARA,QAJwB;EAKxBQ,IAAAA,IAAI,EAAJA,IALwB;EAMxB2D,IAAAA,QAAQ,EAARA,QANwB;EAOxBC,IAAAA,QAAQ,EAARA,QAPwB;EAQxBxF,IAAAA,KAAK,EAAEgN,UARiB;EASxB9M,IAAAA,MAAM,EAAE+M,WATgB;EAUxBrJ,IAAAA,QAAQ,EAARA,QAVwB;EAWxBvC,IAAAA,OAAO,EAAPA,OAXwB;EAYxByC,IAAAA,YAAY,EAAZA,YAZwB;EAaxB2B,IAAAA,UAAU,EAAVA,UAbwB;EAcxBnE,IAAAA,UAAU,EAAVA,UAdwB;EAexBqE,IAAAA,SAAS,EAATA,SAfwB;EAgBxBhC,IAAAA,WAAW,EAAXA,WAhBwB;EAiBxBE,IAAAA,eAAe,EAAfA;EAjBwB,GAAD,CAA3B;EAoBA,MAAM8J,UAAU,GAAGC,aAAO,CACtB;EAAA,WACIhM,IAAI,CAACpB,GAAL,CAAS,UAAAwB,GAAG,EAAI;EACZ,UAAMlC,GAAG,GAAG4N,MAAM,CAAClO,IAAP,CAAYqO,IAAZ,CAAiB,UAAA/N,GAAG;EAAA,eAAIA,GAAG,CAACF,IAAJ,CAASgF,EAAT,KAAgB5C,GAApB;EAAA,OAApB,CAAZ;EAEA,+CAAYlC,GAAZ;EAAiBF,QAAAA,IAAI;EAAIgF,UAAAA,EAAE,EAAE5C;EAAR,WAAgBlC,GAAhB,aAAgBA,GAAhB,uBAAgBA,GAAG,CAAEF,IAArB;EAA2BkF,UAAAA,MAAM,EAAEa,SAAS,CAACG,QAAV,CAAmB9D,GAAnB;EAAnC;EAArB;EACH,KAJD,CADJ;EAAA,GADsB,EAOtB,CAAC2D,SAAD,EAAY/D,IAAZ,EAAkB8L,MAAM,CAAClO,IAAzB,CAPsB,CAA1B;EAUA,MAAMsO,aAAa,GAAGF,aAAO,CACzB;EAAA,WACIF,MAAM,CAAClO,IAAP,CAAYqG,MAAZ,CACI,UAAC/F,GAAD;EAAA,aAAqDA,GAAG,CAACF,IAAJ,CAASwC,KAAT,KAAmB,IAAxE;EAAA,KADJ,CADJ;EAAA,GADyB,EAKzB,CAACsL,MAAM,CAAClO,IAAR,CALyB,CAA7B;EAQA,MAAMuO,UAAU,GAAGC,iBAAa,CAACF,aAAD,EAAgB;EAC5ClM,IAAAA,IAAI,EAAE,cAAA9B,GAAG;EAAA,aAAIA,GAAG,CAACkC,GAAR;EAAA,KADmC;EAE5CiM,IAAAA,KAAK,EAAE,eAAAnO,GAAG;EAAA,aAAK;EACXC,QAAAA,CAAC,EAAED,GAAG,CAACE,KAAJ,GAAY,CADJ;EAEXC,QAAAA,CAAC,EAAEH,GAAG,CAACI,MAAJ,GAAa,CAFL;EAGXF,QAAAA,KAAK,EAAEF,GAAG,CAACE,KAHA;EAIXE,QAAAA,MAAM,EAAEJ,GAAG,CAACI,MAJD;EAKX6E,QAAAA,KAAK,EAAEjF,GAAG,CAACiF,KALA;EAMXmD,QAAAA,SAAS,sBAAepI,GAAG,CAACC,CAAnB,eAAyBD,GAAG,CAACG,CAA7B;EANE,OAAL;EAAA,KAFkC;EAU5CiO,IAAAA,MAAM,EAAE,gBAAApO,GAAG;EAAA,aAAK;EACZC,QAAAA,CAAC,EAAED,GAAG,CAACE,KAAJ,GAAY,CADH;EAEZC,QAAAA,CAAC,EAAEH,GAAG,CAACI,MAAJ,GAAa,CAFJ;EAGZF,QAAAA,KAAK,EAAEF,GAAG,CAACE,KAHC;EAIZE,QAAAA,MAAM,EAAEJ,GAAG,CAACI,MAJA;EAKZ6E,QAAAA,KAAK,EAAEjF,GAAG,CAACiF,KALC;EAMZmD,QAAAA,SAAS,sBAAepI,GAAG,CAACC,CAAnB,eAAyBD,GAAG,CAACG,CAA7B;EANG,OAAL;EAAA,KAViC;EAkB5C2M,IAAAA,MAAM,EAAED,YAlBoC;EAmB5CwB,IAAAA,SAAS,EAAE,CAAC9C;EAnBgC,GAAhB,CAAhC;EAsBA,MAAM/C,iBAAiB,GAAGa,iBAAW,CACjC,iBAA0D;EAAA,QAAvDnJ,KAAuD,SAAvDA,KAAuD;EAAA,QAAhDE,MAAgD,SAAhDA,MAAgD;EACtD,QAAI,CAACsK,WAAL,EAAkB,OAAO,KAAP;EAClB,QAAIC,cAAc,GAAG,CAAjB,IAAsBzK,KAAK,GAAGyK,cAAlC,EAAkD,OAAO,KAAP;EAClD,QAAIC,eAAe,GAAG,CAAlB,IAAuBxK,MAAM,GAAGwK,eAApC,EAAqD,OAAO,KAAP;EACrD,WAAO,IAAP;EACH,GANgC,EAOjC,CAACF,WAAD,EAAcE,eAAd,EAA+BD,cAA/B,CAPiC,CAArC;EAUA,MAAM2D,WAAW,GAAGR,aAAO,CACvB;EAAA,WAAO;EACHzF,MAAAA,YAAY,EAAZA,YADG;EAEHC,MAAAA,WAAW,EAAXA,WAFG;EAGHoC,MAAAA,WAAW,EAAXA,WAHG;EAIHhC,MAAAA,aAAa,EAAbA,aAJG;EAKHiC,MAAAA,cAAc,EAAdA,cALG;EAMHC,MAAAA,eAAe,EAAfA,eANG;EAOHjC,MAAAA,OAAO,EAAPA,OAPG;EAQHC,MAAAA,YAAY,EAAZA,YARG;EASHC,MAAAA,YAAY,EAAZA,YATG;EAUH9E,MAAAA,eAAe,EAAfA,eAVG;EAWH+E,MAAAA,OAAO,EAAPA;EAXG,KAAP;EAAA,GADuB,EAcvB,CACIT,YADJ,EAEIC,WAFJ,EAGIoC,WAHJ,EAII3G,eAJJ,EAKI2E,aALJ,EAMIkC,eANJ,EAOID,cAPJ,EAQIhC,OARJ,EASIC,YATJ,EAUIC,YAVJ,EAWIC,OAXJ,CAduB,CAA3B;EA6BA,MAAMyF,SAAS,GAAGC,aAAQ,CAAClD,IAAD,EAAOsC,MAAM,CAAClO,IAAd,EAAoBmK,IAApB,EAA0B;EAChD4E,IAAAA,OAAO,EAAE,MADuC;EAEhDC,IAAAA,SAAS,EAAE;EAFqC,GAA1B,CAA1B;EAKA,MAAMC,SAAwC,GAAG;EAC7ChP,IAAAA,WAAW,EAAE,IADgC;EAE7CiP,IAAAA,IAAI,EAAE,IAFuC;EAG7ClP,IAAAA,IAAI,EAAE,IAHuC;EAI7CmP,IAAAA,IAAI,EAAE,IAJuC;EAK7C9N,IAAAA,OAAO,EAAE,IALoC;EAM7CsL,IAAAA,OAAO,EAAE;EANoC,GAAjD;;EASA,MAAIjB,MAAM,CAACpF,QAAP,CAAgB,aAAhB,CAAJ,EAAoC;EAChC2I,IAAAA,SAAS,CAAChP,WAAV,GACIc,eAAC,cAAD;EAAkC,MAAA,IAAI,EAAEmN,MAAM,CAAClO,IAA/C;EAAqD,MAAA,WAAW,EAAEC;EAAlE,OAAoB,aAApB,CADJ;EAGH;;EAED,MAAIyL,MAAM,CAACpF,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;EACzB2I,IAAAA,SAAS,CAACC,IAAV,GACInO,eAACqO,SAAD;EAEI,MAAA,MAAM,EAAElB,MAAM,CAAC3J,MAFnB;EAGI,MAAA,MAAM,EAAE2J,MAAM,CAAC1J,MAHnB;EAII,MAAA,KAAK,EAAEgJ,UAJX;EAKI,MAAA,MAAM,EAAEC,WALZ;EAMI,MAAA,GAAG,EAAElB,OANT;EAOI,MAAA,KAAK,EAAEC,SAPX;EAQI,MAAA,MAAM,EAAE5B,UARZ;EASI,MAAA,IAAI,EAAEC;EATV,OACQ,MADR,CADJ;EAaH;;EAED,MAAIa,MAAM,CAACpF,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;EACzB2I,IAAAA,SAAS,CAACjP,IAAV,GACIe,eAACsO,cAAD;EAAA,gBACKd,UAAU,CAAC,UAAC9F,KAAD,EAAQnI,GAAR;EAAA,eACRwJ,mBAAa,CAAC6B,YAAD,oCACNiD,WADM;EAETtO,UAAAA,GAAG,EAAHA,GAFS;EAGTmI,UAAAA,KAAK,EAALA,KAHS;EAITK,UAAAA,iBAAiB,EAAEA,iBAAiB,CAACxI,GAAD,CAJ3B;EAKTkF,UAAAA,KAAK,EAAEuI,QAAQ,CAACzN,GAAG,CAACF,IAAL,CALN;EAMT2I,UAAAA,UAAU,EAAEiF,aAAa,CAAC1N,GAAD,CANhB;EAOTuI,UAAAA,WAAW,EAAE8E,cAAc,CAACrN,GAAD;EAPlB,WADL;EAAA,OAAD;EADf,OAAc,MAAd,CADJ;EAeH;;EAED,MAAIoL,MAAM,CAACpF,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;EACzB2I,IAAAA,SAAS,CAACE,IAAV,GACIpO,eAACuO,SAAD;EAEI,MAAA,KAAK,EAAE9B,UAFX;EAGI,MAAA,MAAM,EAAEC,WAHZ;EAII,MAAA,MAAM,EAAE3C,WAAW,GAAIoD,MAAM,CAAC3J,MAAX,GAA4B,IAJnD;EAKI,MAAA,MAAM,EAAEwG,WAAW,GAAImD,MAAM,CAAC1J,MAAX,GAA4B,IALnD;EAMI,MAAA,OAAO,EAAEiI,WANb;EAOI,MAAA,OAAO,EAAEC;EAPb,OACQ,MADR,CADJ;EAWH;;EAED,MAAIhB,MAAM,CAACpF,QAAP,CAAgB,SAAhB,CAAJ,EAAgC;EAAA;;EAC5B,QAAMlG,KAAI,GAAG,SAAC,EAAD,EAAqB+C,MAArB,iCACN9B,OAAO,CAACL,GAAR,CAAY,UAAAO,MAAM;EAAA,aACjB8G,aAAa,CAAC;EACVrI,QAAAA,IAAI,EAAEuB,MAAM,CAACE,QAAP,KAAoB,MAApB,GAA6B0M,UAA7B,GAA0CD,MAAM,CAAClO,IAD7C;EAEViI,QAAAA,SAAS,EAAE1G,MAAM,CAAC0G,SAFR;EAGVzE,QAAAA,IAAI,EAAEjC,MAAM,CAACE,QAHH;EAIVyG,QAAAA,SAAS,EAATA,SAJU;EAKVpC,QAAAA,MAAM,EAANA,MALU;EAMVwC,QAAAA,WAAW,EAAXA,WANU;EAOVrE,QAAAA,OAAO,EAAPA;EAPU,OAAD,CADI;EAAA,KAAlB,CADM,EAAb;;EAcAgL,IAAAA,SAAS,CAAC5N,OAAV,GACIN,eAAC,UAAD;EAEI,MAAA,KAAK,EAAEyM,UAFX;EAGI,MAAA,MAAM,EAAEC,WAHZ;EAII,MAAA,IAAI,EAAErN,KAJV;EAKI,MAAA,OAAO,EAAEiB,OALb;EAMI,MAAA,WAAW,EAAEC;EANjB,OACQ,SADR,CADJ;EAUH;;EAED,MAAIoK,MAAM,CAACpF,QAAP,CAAgB,SAAhB,CAAJ,EAAgC;EAC5B2I,IAAAA,SAAS,CAACtC,OAAV,GACI5L,eAACwO,qBAAD;EAEI,MAAA,OAAO,EAAE5C,OAFb;EAGI,MAAA,KAAK,EAAEa,UAHX;EAII,MAAA,MAAM,EAAEC,WAJZ;EAKI,MAAA,MAAM,EAAES,MAAM,CAAC3J,MALnB;EAMI,MAAA,MAAM,EAAE2J,MAAM,CAAC1J,MANnB;EAOI,MAAA,KAAK,EAAE6E;EAPX,OACQ,SADR,CADJ;EAWH;;EAGD,MAAMmG,YAAiB,GAAGpB,aAAO,CAC7B;EAAA,6CACOQ,WADP;EAEItC,MAAAA,MAAM,EAANA,MAFJ;EAGIkB,MAAAA,UAAU,EAAVA,UAHJ;EAIIC,MAAAA,WAAW,EAAXA,WAJJ;EAKIjN,MAAAA,KAAK,EAALA,KALJ;EAMIE,MAAAA,MAAM,EAANA;EANJ,OAOOwN,MAPP;EAAA,GAD6B,EAU7B,CAACU,WAAD,EAAclO,MAAd,EAAsB+M,WAAtB,EAAmCD,UAAnC,EAA+ClB,MAA/C,EAAuD4B,MAAvD,EAA+D1N,KAA/D,CAV6B,CAAjC;EAaA,SACIO,eAAC0O,eAAD;EACI,IAAA,KAAK,EAAEnC,UADX;EAEI,IAAA,MAAM,EAAEC,WAFZ;EAGI,IAAA,MAAM,EAAEjB,MAHZ;EAII,IAAA,IAAI,EAAEuC,SAJV;EAKI,IAAA,IAAI,EAAE9C,IALV;EAAA,cAOKL,MAAM,CAAC1K,GAAP,CAAW,UAAC0O,KAAD,EAAQxO,CAAR,EAAc;EAAA;;EACtB,UAAI,OAAOwO,KAAP,KAAiB,UAArB,EAAiC;EAC7B,eAAO3O,eAACsO,cAAD;EAAA,oBAAmBvF,mBAAa,CAAC4F,KAAD,EAAQF,YAAR;EAAhC,WAAetO,CAAf,CAAP;EACH;;EAED,iCAAO+N,SAAP,aAAOA,SAAP,uBAAOA,SAAS,CAAGS,KAAH,CAAhB,+DAA6B,IAA7B;EACH,KANA;EAPL,IADJ;EAiBH,CA3UD;;MA6UaC,GAAG,GAAG,SAANA,GAAM;EAAA,kCACf3G,aADe;EAAA,MACfA,aADe,oCACCyC,eAAe,CAACzC,aADjB;EAAA,4BAEf6C,OAFe;EAAA,MAEfA,OAFe,8BAELJ,eAAe,CAACI,OAFX;EAAA,iCAGfC,YAHe;EAAA,MAGfA,YAHe,mCAGAL,eAAe,CAACK,YAHhB;EAAA,MAIfzC,KAJe,SAIfA,KAJe;EAAA,MAKfuG,aALe,SAKfA,aALe;EAAA,MAMZC,UANY;;EAAA,SAQf9O,eAAC+O,cAAD;EAEQjE,IAAAA,OAAO,EAAPA,OAFR;EAGQ7C,IAAAA,aAAa,EAAbA,aAHR;EAIQ8C,IAAAA,YAAY,EAAZA,YAJR;EAKQ8D,IAAAA,aAAa,EAAbA,aALR;EAMQvG,IAAAA,KAAK,EAALA,KANR;EAAA,cASItI,eAAC,QAAD;EAAoB,MAAA,aAAa,EAAEiI;EAAnC,OAAsD6G,UAAtD;EATJ,IARe;EAAA;;EC7TnB,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CACvBC,KADuB,EAEvB1D,MAFuB,EAGvB/L,CAHuB,EAIvBE,CAJuB;EAAA,SAMvBuP,KAAK,CAAC3B,IAAN,CAAW,UAAA4B,IAAI;EAAA,WACXC,mBAAc,CAACD,IAAI,CAAC1P,CAAL,GAAS+L,MAAM,CAAC6D,IAAjB,EAAuBF,IAAI,CAACxP,CAAL,GAAS6L,MAAM,CAAC8D,GAAvC,EAA4CH,IAAI,CAACzP,KAAjD,EAAwDyP,IAAI,CAACvP,MAA7D,EAAqEH,CAArE,EAAwEE,CAAxE,CADH;EAAA,GAAf,CANuB;EAAA,CAA3B;;EAUA,IAAM4P,QAAQ,GAAG,SAAXA,QAAW,CAACzN,KAAD;EAAA,SAAqC,OAAOA,KAAP,KAAiB,QAAtD;EAAA,CAAjB;;EAEA,IAAM0N,cAAc,GAAG,SAAjBA,cAAiB,OAkHc;EAAA,MAjHjClQ,IAiHiC,QAjHjCA,IAiHiC;EAAA,0BAhHjCsK,OAgHiC;EAAA,MAhHjCA,OAgHiC,6BAhHvBsB,kBAAkB,CAACtB,OAgHI;EAAA,uBA/GjCtI,IA+GiC;EAAA,MA/GjCA,IA+GiC,0BA/G1B4J,kBAAkB,CAAC5J,IA+GO;EAAA,MA7GzBiK,aA6GyB,QA7GjCC,MA6GiC;EAAA,MA5GjC9L,KA4GiC,QA5GjCA,KA4GiC;EAAA,MA3GjCE,MA2GiC,QA3GjCA,MA2GiC;EAAA,4BAzGjCwH,SAyGiC;EAAA,MAzGjCA,SAyGiC,+BAzGrB8D,kBAAkB,CAAC9D,SAyGE;EAAA,yBAxGjCpC,MAwGiC;EAAA,MAxGjCA,MAwGiC,4BAxGxBkG,kBAAkB,CAAClG,MAwGK;EAAA,0BAvGjC7B,OAuGiC;EAAA,MAvGjCA,OAuGiC,6BAvGvB+H,kBAAkB,CAAC/H,OAuGI;EAAA,2BAtGjC8B,QAsGiC;EAAA,MAtGjCA,QAsGiC,8BAtGtBiG,kBAAkB,CAACjG,QAsGG;EAAA,2BArGjCC,QAqGiC;EAAA,MArGjCA,QAqGiC,8BArGtBgG,kBAAkB,CAAChG,QAqGG;EAAA,6BAnGjCC,UAmGiC;EAAA,MAnGjCA,UAmGiC,gCAnGpB+F,kBAAkB,CAAC/F,UAmGC;EAAA,6BAlGjCnE,UAkGiC;EAAA,MAlGjCA,UAkGiC,gCAlGpBkK,kBAAkB,CAAClK,UAkGC;EAAA,0BAhGjCD,OAgGiC;EAAA,MAhGjCA,OAgGiC,6BAhGvBmK,kBAAkB,CAACnK,OAgGI;EAAA,+BA/FjCyC,YA+FiC;EAAA,MA/FjCA,YA+FiC,kCA/FlB0H,kBAAkB,CAAC1H,YA+FD;EAAA,MA7FjCiI,OA6FiC,QA7FjCA,OA6FiC;EAAA,MA5FjCC,SA4FiC,QA5FjCA,SA4FiC;EAAA,6BA3FjC5B,UA2FiC;EAAA,MA3FjCA,UA2FiC,gCA3FpBoB,kBAAkB,CAACpB,UA2FC;EAAA,2BA1FjCC,QA0FiC;EAAA,MA1FjCA,QA0FiC,8BA1FtBmB,kBAAkB,CAACnB,QA0FG;EAAA,8BAzFjCC,WAyFiC;EAAA,MAzFjCA,WAyFiC,iCAzFnBkB,kBAAkB,CAAClB,WAyFA;EAAA,8BAxFjCC,WAwFiC;EAAA,MAxFjCA,WAwFiC,iCAxFnBiB,kBAAkB,CAACjB,WAwFA;EAAA,MAvFjC0B,WAuFiC,QAvFjCA,WAuFiC;EAAA,MAtFjCC,WAsFiC,QAtFjCA,WAsFiC;EAAA,yBApFjChB,MAoFiC;EAAA,MApFjCA,MAoFiC,4BApFxBM,kBAAkB,CAACN,MAoFK;EAAA,4BAnFjC6E,SAmFiC;EAAA,MAnFjCA,SAmFiC,+BAnFrB,UACRC,GADQ,SAYP;EAAA,0BATGlQ,GASH;EAAA,QATUiF,KASV,aATUA,KASV;EAAA,QATiB7E,MASjB,aATiBA,MASjB;EAAA,QATyBF,KASzB,aATyBA,KASzB;EAAA,QATgCD,CAShC,aATgCA,CAShC;EAAA,QATmCE,CASnC,aATmCA,CASnC;EAAA,QAPGoI,WAOH,SAPGA,WAOH;EAAA,QANGF,YAMH,SANGA,YAMH;EAAA,QALGC,WAKH,SALGA,WAKH;EAAA,QAJGpD,KAIH,SAJGA,KAIH;EAAA,QAHGuD,UAGH,SAHGA,UAGH;EAAA,QAFGD,iBAEH,SAFGA,iBAEH;EACD0H,IAAAA,GAAG,CAACC,SAAJ,GAAgBlL,KAAhB;;EAEA,QAAIqD,WAAW,GAAG,CAAlB,EAAqB;EACjB4H,MAAAA,GAAG,CAACE,WAAJ,GAAkB7H,WAAlB;EACA2H,MAAAA,GAAG,CAACG,SAAJ,GAAgB/H,WAAhB;EACH;;EAED4H,IAAAA,GAAG,CAACI,SAAJ;;EAEA,QAAIjI,YAAY,GAAG,CAAnB,EAAsB;EAClB,UAAMkI,MAAM,GAAGhQ,IAAI,CAACqB,GAAL,CAASyG,YAAT,EAAuBjI,MAAvB,CAAf;EAEA8P,MAAAA,GAAG,CAACM,MAAJ,CAAWvQ,CAAC,GAAGsQ,MAAf,EAAuBpQ,CAAvB;EACA+P,MAAAA,GAAG,CAACO,MAAJ,CAAWxQ,CAAC,GAAGC,KAAJ,GAAYqQ,MAAvB,EAA+BpQ,CAA/B;EACA+P,MAAAA,GAAG,CAACQ,gBAAJ,CAAqBzQ,CAAC,GAAGC,KAAzB,EAAgCC,CAAhC,EAAmCF,CAAC,GAAGC,KAAvC,EAA8CC,CAAC,GAAGoQ,MAAlD;EACAL,MAAAA,GAAG,CAACO,MAAJ,CAAWxQ,CAAC,GAAGC,KAAf,EAAsBC,CAAC,GAAGC,MAAJ,GAAamQ,MAAnC;EACAL,MAAAA,GAAG,CAACQ,gBAAJ,CAAqBzQ,CAAC,GAAGC,KAAzB,EAAgCC,CAAC,GAAGC,MAApC,EAA4CH,CAAC,GAAGC,KAAJ,GAAYqQ,MAAxD,EAAgEpQ,CAAC,GAAGC,MAApE;EACA8P,MAAAA,GAAG,CAACO,MAAJ,CAAWxQ,CAAC,GAAGsQ,MAAf,EAAuBpQ,CAAC,GAAGC,MAA3B;EACA8P,MAAAA,GAAG,CAACQ,gBAAJ,CAAqBzQ,CAArB,EAAwBE,CAAC,GAAGC,MAA5B,EAAoCH,CAApC,EAAuCE,CAAC,GAAGC,MAAJ,GAAamQ,MAApD;EACAL,MAAAA,GAAG,CAACO,MAAJ,CAAWxQ,CAAX,EAAcE,CAAC,GAAGoQ,MAAlB;EACAL,MAAAA,GAAG,CAACQ,gBAAJ,CAAqBzQ,CAArB,EAAwBE,CAAxB,EAA2BF,CAAC,GAAGsQ,MAA/B,EAAuCpQ,CAAvC;EACA+P,MAAAA,GAAG,CAACS,SAAJ;EACH,KAbD,MAaO;EACHT,MAAAA,GAAG,CAACU,IAAJ,CAAS3Q,CAAT,EAAYE,CAAZ,EAAeD,KAAf,EAAsBE,MAAtB;EACH;;EAED8P,IAAAA,GAAG,CAACrG,IAAJ;;EAEA,QAAIvB,WAAW,GAAG,CAAlB,EAAqB;EACjB4H,MAAAA,GAAG,CAACW,MAAJ;EACH;;EAED,QAAIrI,iBAAJ,EAAuB;EACnB0H,MAAAA,GAAG,CAACY,YAAJ,GAAmB,QAAnB;EACAZ,MAAAA,GAAG,CAACa,SAAJ,GAAgB,QAAhB;EACAb,MAAAA,GAAG,CAACC,SAAJ,GAAgB1H,UAAhB;EACAyH,MAAAA,GAAG,CAACc,QAAJ,CAAa9L,KAAb,EAAoBjF,CAAC,GAAGC,KAAK,GAAG,CAAhC,EAAmCC,CAAC,GAAGC,MAAM,GAAG,CAAhD;EACH;EACJ,GAgCgC;EAAA,8BA9BjCsK,WA8BiC;EAAA,MA9BjCA,WA8BiC,iCA9BnBgB,kBAAkB,CAAChB,WA8BA;EAAA,wBA7BjCxF,KA6BiC;EAAA,MA7BjCA,KA6BiC,2BA7BzBwG,kBAAkB,CAACxG,KA6BM;EAAA,iCA5BjCyF,cA4BiC;EAAA,MA5BjCA,cA4BiC,oCA5BhBe,kBAAkB,CAACf,cA4BH;EAAA,kCA3BjCC,eA2BiC;EAAA,MA3BjCA,eA2BiC,qCA3Bfc,kBAAkB,CAACd,eA2BJ;EAAA,iCA1BjCC,cA0BiC;EAAA,MA1BjCA,cA0BiC,oCA1BhBa,kBAAkB,CAACb,cA0BH;EAAA,0BAxBjCC,OAwBiC;EAAA,MAxBjCA,OAwBiC,6BAxBvBY,kBAAkB,CAACZ,OAwBI;EAAA,yBAvBjCC,MAuBiC;EAAA,MAvBjCA,QAuBiC,4BAvBxBW,kBAAkB,CAACX,MAuBK;EAAA,+BAtBjC1C,YAsBiC;EAAA,MAtBjCA,YAsBiC,kCAtBlBqD,kBAAkB,CAACrD,YAsBD;EAAA,8BArBjCC,WAqBiC;EAAA,MArBjCA,WAqBiC,iCArBnBoD,kBAAkB,CAACpD,WAqBA;EAAA,8BApBjCC,WAoBiC;EAAA,MApBjCA,WAoBiC,iCApBnBmD,kBAAkB,CAACnD,WAoBA;EAAA,8BAlBjC5I,WAkBiC;EAAA,MAlBjCA,aAkBiC,iCAlBnB+L,kBAAkB,CAAC/L,WAkBA;EAAA,MAhBjCqI,WAgBiC,QAhBjCA,WAgBiC;EAAA,+BAfjCiD,YAeiC;EAAA,MAfjCA,YAeiC,kCAflBS,kBAAkB,CAACT,YAeD;EAAA,MAbjCqB,WAaiC,QAbjCA,WAaiC;EAAA,gCAXjC5D,aAWiC;EAAA,MAXjCA,aAWiC,mCAXjBgD,kBAAkB,CAAChD,aAWF;EAAA,0BAVjCI,OAUiC;EAAA,MAVjCA,SAUiC,6BAVvB4C,kBAAkB,CAAC5C,OAUI;EAAA,MATjCH,OASiC,QATjCA,OASiC;EAAA,MARjCC,YAQiC,QARjCA,YAQiC;EAAA,MAPjCC,YAOiC,QAPjCA,YAOiC;EAAA,0BALjC9H,OAKiC;EAAA,MALjCA,SAKiC,6BALvB2K,kBAAkB,CAAC3K,OAKI;EAAA,6BAHjC4K,UAGiC;EAAA,MAHjCA,UAGiC,gCAHpBD,kBAAkB,CAACC,UAGC;EAAA,MADjCsF,SACiC,QADjCA,SACiC;EACjC,MAAMC,QAAQ,GAAGC,YAAM,CAA2B,IAA3B,CAAvB;EAEA,MAAMpI,KAAK,GAAGC,aAAQ,EAAtB;;EAHiC,uBAIoC+D,kBAAa,CAC9E7M,KAD8E,EAE9EE,MAF8E,EAG9E2L,aAH8E,CAJjD;EAAA,MAIzBC,MAJyB,kBAIzBA,MAJyB;EAAA,MAIjBkB,UAJiB,kBAIjBA,UAJiB;EAAA,MAILC,WAJK,kBAILA,WAJK;EAAA,MAIQH,UAJR,kBAIQA,UAJR;EAAA,MAIoBC,WAJpB,kBAIoBA,WAJpB;;EAAA,oBAUahE,kBAAU,EAVvB;EAAA,MAUzBC,oBAVyB,eAUzBA,oBAVyB;EAAA,MAUHC,WAVG,eAUHA,WAVG;;EAYjC,MAAMtF,WAAW,GAAGuJ,sBAAiB,CAACd,WAAD,CAArC;EACA,MAAMe,cAAc,GAAGC,wBAAiB,CAA6B/E,WAA7B,EAA0CQ,KAA1C,CAAxC;EACA,MAAMjF,QAAQ,GAAGyJ,2BAAoB,CAACxC,QAAD,EAASD,OAAT,CAArC;EACA,MAAMxJ,QAAQ,GAAGkM,wBAAmB,CAACpD,OAAD,CAApC;EACA,MAAMqD,QAAQ,GAAGD,wBAAmB,CAACtI,KAAD,CAApC;EACA,MAAMwI,aAAa,GAAGJ,wBAAiB,CAA6BzC,cAA7B,EAA6C9B,KAA7C,CAAvC;EACA,MAAMhF,eAAe,GAAGyJ,wBAAmB,CAACvC,YAAD,CAA3C;EAEA,MAAMmG,OAAO,GAAG;EACZ5L,IAAAA,MAAM,EAANA,MADY;EAEZ7B,IAAAA,OAAO,EAAPA,OAFY;EAGZ7D,IAAAA,IAAI,EAAJA,IAHY;EAIZwB,IAAAA,QAAQ,EAARA,QAJY;EAKZQ,IAAAA,IAAI,EAAJA,IALY;EAMZ2D,IAAAA,QAAQ,EAARA,QANY;EAOZC,IAAAA,QAAQ,EAARA,QAPY;EAQZxF,IAAAA,KAAK,EAAEgN,UARK;EASZ9M,IAAAA,MAAM,EAAE+M,WATI;EAUZrJ,IAAAA,QAAQ,EAARA,QAVY;EAWZvC,IAAAA,OAAO,EAAPA,OAXY;EAYZyC,IAAAA,YAAY,EAAZA,YAZY;EAaZ2B,IAAAA,UAAU,EAAVA,UAbY;EAcZnE,IAAAA,UAAU,EAAVA,UAdY;EAeZqC,IAAAA,WAAW,EAAXA,WAfY;EAgBZE,IAAAA,eAAe,EAAfA;EAhBY,GAAhB;EAmBA,MAAM6J,MAAM,GACRhG,SAAS,KAAK,SAAd,GAA0BrC,mBAAmB,CAAC6L,OAAD,CAA7C,GAAyD9J,mBAAmB,CAAC8J,OAAD,CADhF;EAGA,MAAMvD,UAAU,GAAGC,aAAO,CACtB;EAAA,WACIhM,IAAI,CAACpB,GAAL,CAAS,UAAAwB,GAAG,EAAI;EACZ,UAAMlC,GAAG,GAAG4N,MAAM,CAAClO,IAAP,CAAYqO,IAAZ,CAAiB,UAAA/N,GAAG;EAAA,eAAIA,GAAG,CAACF,IAAJ,CAASgF,EAAT,KAAgB5C,GAApB;EAAA,OAApB,CAAZ;EAEA,+CAAYlC,GAAZ;EAAiBF,QAAAA,IAAI;EAAIgF,UAAAA,EAAE,EAAE5C;EAAR,WAAgBlC,GAAhB,aAAgBA,GAAhB,uBAAgBA,GAAG,CAAEF,IAArB;EAA2BkF,UAAAA,MAAM,EAAE;EAAnC;EAArB;EACH,KAJD,CADJ;EAAA,GADsB,EAOtB,CAAClD,IAAD,EAAO8L,MAAM,CAAClO,IAAd,CAPsB,CAA1B;EAUA,MAAMsO,aAAa,GAAGF,aAAO,CACzB;EAAA,WACIF,MAAM,CAAClO,IAAP,CAAYqG,MAAZ,CACI,UAAC/F,GAAD;EAAA,aAAqDA,GAAG,CAACF,IAAJ,CAASwC,KAAT,KAAmB,IAAxE;EAAA,KADJ,CADJ;EAAA,GADyB,EAKzB,CAACsL,MAAM,CAAClO,IAAR,CALyB,CAA7B;EAQA,MAAM8I,iBAAiB,GAAGa,iBAAW,CACjC,iBAA0D;EAAA,QAAvDnJ,KAAuD,SAAvDA,KAAuD;EAAA,QAAhDE,MAAgD,SAAhDA,MAAgD;EACtD,QAAI,CAACsK,WAAL,EAAkB,OAAO,KAAP;EAClB,QAAIC,cAAc,GAAG,CAAjB,IAAsBzK,KAAK,GAAGyK,cAAlC,EAAkD,OAAO,KAAP;EAClD,QAAIC,eAAe,GAAG,CAAlB,IAAuBxK,MAAM,GAAGwK,eAApC,EAAqD,OAAO,KAAP;EACrD,WAAO,IAAP;EACH,GANgC,EAOjC,CAACF,WAAD,EAAcE,eAAd,EAA+BD,cAA/B,CAPiC,CAArC;EAWA,MAAM/K,gBAAqB,GAAGyR,kCAAsB,CAAC;EACjD1R,IAAAA,WAAW,EAAEE,0BAAc,CAAC;EACxBC,MAAAA,IAAI,EAAE8N,MAAM,CAAClO,IADW;EAExBC,MAAAA,WAAW,EAAXA,aAFwB;EAGxBI,MAAAA,WAAW,EAAE,qBAAA4P,IAAI;EAAA,eAAK;EAClB1P,UAAAA,CAAC,EAAE0P,IAAI,CAAC1P,CADU;EAElBE,UAAAA,CAAC,EAAEwP,IAAI,CAACxP;EAFU,SAAL;EAAA,OAHO;EAOxBE,MAAAA,aAAa,EAAE;EAAA,YAAGH,KAAH,SAAGA,KAAH;EAAA,YAAUE,MAAV,SAAUA,MAAV;EAAA,eAAwB;EACnCF,UAAAA,KAAK,EAALA,KADmC;EAEnCE,UAAAA,MAAM,EAANA,MAFmC;EAGnCE,UAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL,CAASN,KAAT,EAAgBE,MAAhB;EAH6B,SAAxB;EAAA;EAPS,KAAD;EADsB,GAAD,CAApD;EAiBA,MAAM8O,YAAiB,GAAGpB,aAAO,CAC7B;EAAA;EACIzF,MAAAA,YAAY,EAAZA,YADJ;EAEIC,MAAAA,WAAW,EAAXA,WAFJ;EAGIoC,MAAAA,WAAW,EAAXA,WAHJ;EAIIhC,MAAAA,aAAa,EAAbA,aAJJ;EAKIiC,MAAAA,cAAc,EAAdA,cALJ;EAMIC,MAAAA,eAAe,EAAfA,eANJ;EAOIjC,MAAAA,OAAO,EAAPA,OAPJ;EAQIC,MAAAA,YAAY,EAAZA,YARJ;EASIC,MAAAA,YAAY,EAAZA,YATJ;EAUI9E,MAAAA,eAAe,EAAfA,eAVJ;EAWI+E,MAAAA,OAAO,EAAPA,SAXJ;EAYIkD,MAAAA,MAAM,EAANA,MAZJ;EAaIkB,MAAAA,UAAU,EAAVA,UAbJ;EAcIC,MAAAA,WAAW,EAAXA,WAdJ;EAeIjN,MAAAA,KAAK,EAALA,KAfJ;EAgBIE,MAAAA,MAAM,EAANA;EAhBJ,OAiBOwN,MAjBP;EAAA,GAD6B,EAoB7B,CACIvF,YADJ,EAEIC,WAFJ,EAGIoC,WAHJ,EAII3G,eAJJ,EAKI3D,MALJ,EAMI+M,WANJ,EAOID,UAPJ,EAQIxE,aARJ,EASIkC,eATJ,EAUID,cAVJ,EAWIqB,MAXJ,EAYIrD,OAZJ,EAaIC,YAbJ,EAcIC,YAdJ,EAeI+E,MAfJ,EAgBI9E,SAhBJ,EAiBI5I,KAjBJ,CApB6B,CAAjC;EAyCAoR,EAAAA,eAAS,CAAC,YAAM;EAAA;;EACZ,QAAMpB,GAAG,wBAAGgB,QAAQ,CAACK,OAAZ,sDAAG,kBAAkBC,UAAlB,CAA6B,IAA7B,CAAZ;EAEA,QAAI,CAACN,QAAQ,CAACK,OAAd,EAAuB;EACvB,QAAI,CAACrB,GAAL,EAAU;EAEVgB,IAAAA,QAAQ,CAACK,OAAT,CAAiBrR,KAAjB,GAAyB8M,UAAU,GAAGrB,UAAtC;EACAuF,IAAAA,QAAQ,CAACK,OAAT,CAAiBnR,MAAjB,GAA0B6M,WAAW,GAAGtB,UAAxC;EAEAuE,IAAAA,GAAG,CAAC1J,KAAJ,CAAUmF,UAAV,EAAsBA,UAAtB;EAEAuE,IAAAA,GAAG,CAACC,SAAJ,GAAgBpH,KAAK,CAAC0I,UAAtB;EACAvB,IAAAA,GAAG,CAACwB,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB1E,UAAnB,EAA+BC,WAA/B;EACAiD,IAAAA,GAAG,CAACyB,SAAJ,CAAc3F,MAAM,CAAC6D,IAArB,EAA2B7D,MAAM,CAAC8D,GAAlC;EAEA1E,IAAAA,MAAM,CAACwG,OAAP,CAAe,UAAAxC,KAAK,EAAI;EACpB,UAAIA,KAAK,KAAK,MAAd,EAAsB;EAClB,YAAIW,QAAQ,CAAChH,KAAK,CAAC8F,IAAN,CAAWgD,IAAX,CAAgBC,WAAjB,CAAR,IAAyC/I,KAAK,CAAC8F,IAAN,CAAWgD,IAAX,CAAgBC,WAAhB,GAA8B,CAA3E,EAA8E;EAC1E5B,UAAAA,GAAG,CAACG,SAAJ,GAAgBtH,KAAK,CAAC8F,IAAN,CAAWgD,IAAX,CAAgBC,WAAhC;EACA5B,UAAAA,GAAG,CAACE,WAAJ,GAAkBrH,KAAK,CAAC8F,IAAN,CAAWgD,IAAX,CAAgBhB,MAAlC;;EAEA,cAAIrG,WAAJ,EAAiB;EACbuH,YAAAA,4BAAuB,CAAkB7B,GAAlB,EAAuB;EAC1ChQ,cAAAA,KAAK,EAALA,KAD0C;EAE1CE,cAAAA,MAAM,EAANA,MAF0C;EAG1CoG,cAAAA,KAAK,EAAEoH,MAAM,CAAC3J,MAH4B;EAI1CxC,cAAAA,IAAI,EAAE,GAJoC;EAK1C2E,cAAAA,MAAM,EAAE+F;EALkC,aAAvB,CAAvB;EAOH;;EAED,cAAI1B,WAAJ,EAAiB;EACbsH,YAAAA,4BAAuB,CAAkB7B,GAAlB,EAAuB;EAC1ChQ,cAAAA,KAAK,EAALA,KAD0C;EAE1CE,cAAAA,MAAM,EAANA,MAF0C;EAG1CoG,cAAAA,KAAK,EAAEoH,MAAM,CAAC1J,MAH4B;EAI1CzC,cAAAA,IAAI,EAAE,GAJoC;EAK1C2E,cAAAA,MAAM,EAAEgG;EALkC,aAAvB,CAAvB;EAOH;EACJ;EACJ,OAzBD,MAyBO,IAAIgD,KAAK,KAAK,MAAd,EAAsB;EACzB4C,QAAAA,uBAAkB,CAAC9B,GAAD,EAAM;EACpBjM,UAAAA,MAAM,EAAE2J,MAAM,CAAC3J,MADK;EAEpBC,UAAAA,MAAM,EAAE0J,MAAM,CAAC1J,MAFK;EAGpBhE,UAAAA,KAAK,EAAEgN,UAHa;EAIpB9M,UAAAA,MAAM,EAAE+M,WAJY;EAKpB2C,UAAAA,GAAG,EAAE7D,OALe;EAMpBgG,UAAAA,KAAK,EAAE/F,SANa;EAOpBgG,UAAAA,MAAM,EAAE5H,UAPY;EAQpBuF,UAAAA,IAAI,EAAEtF,QARc;EASpBxB,UAAAA,KAAK,EAALA;EAToB,SAAN,CAAlB;EAWH,OAZM,MAYA,IAAIqG,KAAK,KAAK,MAAd,EAAsB;EACzBpB,QAAAA,aAAa,CAAC4D,OAAd,CAAsB,UAAA5R,GAAG,EAAI;EACzBiQ,UAAAA,SAAS,CAACC,GAAD,EAAM;EACXlQ,YAAAA,GAAG,EAAHA,GADW;EAEXuI,YAAAA,WAAW,EAAE8E,cAAc,CAACrN,GAAD,CAFhB;EAGXqI,YAAAA,YAAY,EAAZA,YAHW;EAIXC,YAAAA,WAAW,EAAXA,WAJW;EAKXpD,YAAAA,KAAK,EAAEuI,QAAQ,CAACzN,GAAG,CAACF,IAAL,CALJ;EAMX2I,YAAAA,UAAU,EAAEiF,aAAa,CAAC1N,GAAD,CANd;EAOXwI,YAAAA,iBAAiB,EAAEA,iBAAiB,CAACxI,GAAD;EAPzB,WAAN,CAAT;EASH,SAVD;EAWH,OAZM,MAYA,IAAIoP,KAAK,KAAK,SAAd,EAAyB;EAC5BrO,QAAAA,SAAO,CAAC6Q,OAAR,CAAgB,UAAA3Q,MAAM,EAAI;EACtB,cAAMnB,IAAI,GAAGiI,aAAa,CAAC;EACvBrI,YAAAA,IAAI,EAAEmO,UADiB;EAEvBlG,YAAAA,SAAS,EAAE1G,MAAM,CAAC0G,SAFK;EAGvBzE,YAAAA,IAAI,EAAEjC,MAAM,CAACE,QAHU;EAIvByG,YAAAA,SAAS,EAATA,SAJuB;EAKvBpC,YAAAA,MAAM,EAANA,MALuB;EAMvBwC,YAAAA,WAAW,EAAXA,WANuB;EAOvBrE,YAAAA,OAAO,EAAPA;EAPuB,WAAD,CAA1B;EAUAwO,UAAAA,4BAAoB,CAACjC,GAAD,oCACbjP,MADa;EAEhBnB,YAAAA,IAAI,EAAJA,IAFgB;EAGhBsS,YAAAA,cAAc,EAAElF,UAHA;EAIhBmF,YAAAA,eAAe,EAAElF,WAJD;EAKhBpE,YAAAA,KAAK,EAALA;EALgB,aAApB;EAOH,SAlBD;EAmBH,OApBM,MAoBA,IAAIqG,KAAK,KAAK,aAAd,EAA6B;EAChCkD,QAAAA,qCAAyB,CAACpC,GAAD,EAAM;EAAEvQ,UAAAA,WAAW,EAAEC,gBAAf;EAAiCmJ,UAAAA,KAAK,EAALA;EAAjC,SAAN,CAAzB;EACH,OAFM,MAEA,IAAI,OAAOqG,KAAP,KAAiB,UAArB,EAAiC;EACpCA,QAAAA,KAAK,CAACc,GAAD,EAAMhB,YAAN,CAAL;EACH;EACJ,KA3ED;EA6EAgB,IAAAA,GAAG,CAACqC,IAAJ;EACH,GA7FQ,EA6FN,CACCjI,UADD,EAECC,QAFD,EAGC2B,SAHD,EAICD,OAJD,EAKC+B,aALD,EAMC3F,YAND,EAOCC,WAPD,EAQC1I,gBARD,EASC4K,WATD,EAUCC,WAVD,EAWC4C,cAXD,EAYCI,QAZD,EAaCC,aAbD,EAcCvB,WAdD,EAeCC,WAfD,EAgBCxE,SAhBD,EAiBCxH,MAjBD,EAkBC+M,WAlBD,EAmBCD,UAnBD,EAoBCgC,YApBD,EAqBC9D,MArBD,EAsBC5F,MAtBD,EAuBCqI,UAvBD,EAwBC7F,WAxBD,EAyBCjH,SAzBD,EA0BCiL,MAAM,CAAC6D,IA1BR,EA2BC7D,MAAM,CAAC8D,GA3BR,EA4BC7C,WA5BD,EA6BCD,UA7BD,EA8BCrB,UA9BD,EA+BCsE,SA/BD,EAgCCrC,MAAM,CAAC3J,MAhCR,EAiCC2J,MAAM,CAAC1J,MAjCR,EAkCCP,OAlCD,EAmCC6E,iBAnCD,EAoCCO,KApCD,EAqCC7I,KArCD,CA7FM,CAAT;EAqIA,MAAMsS,gBAAgB,GAAGnJ,iBAAW,CAChC,UAACC,KAAD,EAAgD;EAC5C,QAAI,CAACsE,MAAM,CAAClO,IAAZ,EAAkB;EAClB,QAAI,CAACwR,QAAQ,CAACK,OAAd,EAAuB;;EAFqB,6BAI7BkB,sBAAiB,CAACvB,QAAQ,CAACK,OAAV,EAAmBjI,KAAnB,CAJY;EAAA;EAAA,QAIrCrJ,CAJqC;EAAA,QAIlCE,CAJkC;;EAK5C,QAAMH,GAAG,GAAGyP,kBAAkB,CAAC7B,MAAM,CAAClO,IAAR,EAAcsM,MAAd,EAAsB/L,CAAtB,EAAyBE,CAAzB,CAA9B;;EAEA,QAAIH,GAAG,KAAKoB,SAAZ,EAAuB;EACnB8H,MAAAA,oBAAoB,CAChBM,mBAAa,CAACV,SAAD,oCACN9I,GAAG,CAACF,IADE;EAETmF,QAAAA,KAAK,EAAEjF,GAAG,CAACiF,KAFF;EAGTC,QAAAA,KAAK,EAAElF,GAAG,CAACkF,KAHF;EAIT5C,QAAAA,KAAK,EAAEC,MAAM,CAACvC,GAAG,CAACF,IAAJ,CAASwC,KAAV;EAJJ,SADG,EAOhBgH,KAPgB,CAApB;;EAUA,UAAIA,KAAK,CAACtC,IAAN,KAAe,YAAnB,EAAiC;EAC7B4B,QAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAG5I,GAAG,CAACF,IAAP,EAAawJ,KAAb,CAAZ;EACH;EACJ,KAdD,MAcO;EACHH,MAAAA,WAAW;EACd;EACJ,GAzB+B,EA0BhC,CAACA,WAAD,EAAc6C,MAAd,EAAsBpD,YAAtB,EAAoCgF,MAAM,CAAClO,IAA3C,EAAiDwJ,oBAAjD,EAAuEJ,SAAvE,CA1BgC,CAApC;EA6BA,MAAMY,gBAAgB,GAAGL,iBAAW,CAChC,UAACC,KAAD,EAAgD;EAC5C,QAAI,CAACsE,MAAM,CAAClO,IAAZ,EAAkB;EAClB,QAAI,CAACwR,QAAQ,CAACK,OAAd,EAAuB;EAEvBpI,IAAAA,WAAW;;EAJiC,8BAM7BsJ,sBAAiB,CAACvB,QAAQ,CAACK,OAAV,EAAmBjI,KAAnB,CANY;EAAA;EAAA,QAMrCrJ,CANqC;EAAA,QAMlCE,CANkC;;EAO5C,QAAMH,GAAG,GAAGyP,kBAAkB,CAAC7B,MAAM,CAAClO,IAAR,EAAcsM,MAAd,EAAsB/L,CAAtB,EAAyBE,CAAzB,CAA9B;;EAEA,QAAIH,GAAJ,EAAS;EACL6I,MAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAG7I,GAAG,CAACF,IAAP,EAAawJ,KAAb,CAAZ;EACH;EACJ,GAb+B,EAchC,CAACH,WAAD,EAAc6C,MAAd,EAAsBnD,YAAtB,EAAoC+E,MAAM,CAAClO,IAA3C,CAdgC,CAApC;EAiBA,MAAM0J,WAAW,GAAGC,iBAAW,CAC3B,UAACC,KAAD,EAAgD;EAC5C,QAAI,CAACsE,MAAM,CAAClO,IAAZ,EAAkB;EAClB,QAAI,CAACwR,QAAQ,CAACK,OAAd,EAAuB;;EAFqB,8BAI7BkB,sBAAiB,CAACvB,QAAQ,CAACK,OAAV,EAAmBjI,KAAnB,CAJY;EAAA;EAAA,QAIrCrJ,CAJqC;EAAA,QAIlCE,CAJkC;;EAK5C,QAAMH,GAAG,GAAGyP,kBAAkB,CAAC7B,MAAM,CAAClO,IAAR,EAAcsM,MAAd,EAAsB/L,CAAtB,EAAyBE,CAAzB,CAA9B;;EAEA,QAAIH,GAAG,KAAKoB,SAAZ,EAAuB;EACnBuH,MAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,mCAAQ3I,GAAG,CAACF,IAAZ;EAAkBmF,QAAAA,KAAK,EAAEjF,GAAG,CAACiF;EAA7B,UAAsCqE,KAAtC,CAAP;EACH;EACJ,GAX0B,EAY3B,CAAC0C,MAAD,EAASrD,OAAT,EAAkBiF,MAAM,CAAClO,IAAzB,CAZ2B,CAA/B;EAeA,SACIe;EACI,IAAA,GAAG,EAAE,aAAAiS,MAAM,EAAI;EACXxB,MAAAA,QAAQ,CAACK,OAAT,GAAmBmB,MAAnB;EACA,UAAIzB,SAAS,IAAI,aAAaA,SAA9B,EAAyCA,SAAS,CAACM,OAAV,GAAoBmB,MAApB;EAC5C,KAJL;EAKI,IAAA,KAAK,EAAE1F,UAAU,GAAGrB,UALxB;EAMI,IAAA,MAAM,EAAEsB,WAAW,GAAGtB,UAN1B;EAOI,IAAA,KAAK,EAAE;EACHzL,MAAAA,KAAK,EAAE8M,UADJ;EAEH5M,MAAAA,MAAM,EAAE6M,WAFL;EAGH0F,MAAAA,MAAM,EAAEjK,aAAa,GAAG,MAAH,GAAY;EAH9B,KAPX;EAYI,IAAA,YAAY,EAAEA,aAAa,GAAG8J,gBAAH,GAAsBpR,SAZrD;EAaI,IAAA,WAAW,EAAEsH,aAAa,GAAG8J,gBAAH,GAAsBpR,SAbpD;EAcI,IAAA,YAAY,EAAEsH,aAAa,GAAGgB,gBAAH,GAAsBtI,SAdrD;EAeI,IAAA,OAAO,EAAEsH,aAAa,GAAGU,WAAH,GAAiBhI;EAf3C,IADJ;EAmBH,CAxcD;;MA0cawR,SAAS,GAAGC,gBAAU,CAC/B,iBAEIC,GAFJ;EAAA,MACMpK,aADN,SACMA,aADN;EAAA,MACqB4G,aADrB,SACqBA,aADrB;EAAA,MACoCvG,KADpC,SACoCA,KADpC;EAAA,MAC8CjD,KAD9C;;EAAA,SAIIrF,eAAC+O,cAAD;EAAiB9G,IAAAA,aAAa,EAAbA,aAAjB;EAAgC4G,IAAAA,aAAa,EAAbA,aAAhC;EAA+CvG,IAAAA,KAAK,EAALA,KAA/C;EAAwD,IAAA,OAAO,EAAE,KAAjE;EAAA,cACItI,eAAC,cAAD,oCAAoBqF,KAApB;EAA2B,MAAA,SAAS,EAAEgN;EAAtC;EADJ,IAJJ;EAAA,CAD+B;;MCtgBtBC,aAAa,GAAG,SAAhBA,aAAgB,CACzBjN,KADyB;EAAA,SAGzBrF,eAACuS,sBAAD;EAAA,cACK;EAAA,UAAG9S,KAAH,QAAGA,KAAH;EAAA,UAAUE,MAAV,QAAUA,MAAV;EAAA,aAAuBK,eAAC,GAAD;EAAK,QAAA,KAAK,EAAEP,KAAZ;EAAmB,QAAA,MAAM,EAAEE;EAA3B,SAAuC0F,KAAvC,EAAvB;EAAA;EADL,IAHyB;EAAA;;MCChBmN,mBAAmB,GAAGJ,gBAAU,CAAC,SAASI,mBAAT,CAE5CnN,KAF4C,EAEegN,GAFf,EAEqD;EAC/F,SACIrS,eAACuS,sBAAD;EAAA,cACK;EAAA,UAAG9S,KAAH,QAAGA,KAAH;EAAA,UAAUE,MAAV,QAAUA,MAAV;EAAA,aACGK,eAAC,SAAD;EAAW,QAAA,KAAK,EAAEP,KAAlB;EAAyB,QAAA,MAAM,EAAEE;EAAjC,SAA6C0F,KAA7C;EAAoD,QAAA,GAAG,EAAEgN;EAAzD,SADH;EAAA;EADL,IADJ;EAOH,CAV4C;;;;;;;;;;;;;;;;;;;"}