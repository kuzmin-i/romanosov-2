{"version":3,"file":"nivo-bar.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/BarAnnotations.tsx","../src/BarLegends.tsx","../src/compute/common.ts","../src/compute/grouped.ts","../src/compute/stacked.ts","../src/compute/legends.ts","../src/BarItem.tsx","../src/BarTooltip.tsx","../src/props.ts","../src/Bar.tsx","../src/BarCanvas.tsx","../src/ResponsiveBar.tsx","../src/ResponsiveBarCanvas.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarCommonProps, LegendData } from './types'\n\ninterface BarLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: BarCommonProps<RawDatum>['legends']\n    data: LegendData[]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    data,\n    toggleSerie,\n}: BarLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={legend.data ?? data}\n                    toggleSerie={\n                        legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                    }\n                />\n            ))}\n        </>\n    )\n}\n","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (computeScale(\n        indexScale,\n        { all: data.map(getIndex), min: 0, max: 0 },\n        size,\n        axis\n    ) as ScaleBand<string>).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: RawDatum[], keys: string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n","import { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand } from '@nivo/scales'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\nimport { computeScale } from '@nivo/scales'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst flatten = <T>(array: T[][]) => ([] as T[]).concat(...array)\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n) => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars = flatten(\n        keys.map((key, i) =>\n            range(0, xScale.domain().length).map(index => {\n                const [rawValue, value] = coerceValue(data[index][key])\n                const indexValue = getIndex(data[index])\n                const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n                const y = getY(value)\n                const barHeight = getHeight(value, y)\n                const barData = {\n                    id: key,\n                    value: rawValue === null ? rawValue : value,\n                    formattedValue: formatValue(value),\n                    hidden: false,\n                    index,\n                    indexValue,\n                    data: cleanedData[index],\n                }\n\n                return {\n                    key: `${key}.${barData.indexValue}`,\n                    data: barData,\n                    x,\n                    y,\n                    width: barWidth,\n                    height: barHeight,\n                    color: getColor(barData),\n                    label: getTooltipLabel(barData),\n                }\n            })\n        )\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n) => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars = flatten(\n        keys.map((key, i) =>\n            range(0, yScale.domain().length).map(index => {\n                const [rawValue, value] = coerceValue(data[index][key])\n                const indexValue = getIndex(data[index])\n                const x = getX(value)\n                const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n                const barWidth = getWidth(value, x)\n                const barData = {\n                    id: key,\n                    value: rawValue === null ? rawValue : value,\n                    formattedValue: formatValue(value),\n                    hidden: false,\n                    index,\n                    indexValue,\n                    data: cleanedData[index],\n                }\n\n                return {\n                    key: `${key}.${barData.indexValue}`,\n                    data: barData,\n                    x,\n                    y,\n                    width: barWidth,\n                    height: barHeight,\n                    color: getColor(barData),\n                    label: getTooltipLabel(barData),\n                }\n            })\n        )\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : ((arr as unknown) as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n) => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars = flattenDeep(\n        stackedData.map(stackedDataItem =>\n            xScale.domain().map((index, i) => {\n                const d = stackedDataItem[i]\n                const x = xScale(getIndex(d.data)) ?? 0\n                const y = (getY(d) ?? 0) + innerPadding * 0.5\n                const barHeight = getHeight(d, y) - innerPadding\n                const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n                const barData = {\n                    id: stackedDataItem.key,\n                    value: rawValue === null ? rawValue : value,\n                    formattedValue: formatValue(value),\n                    hidden: false,\n                    index: i,\n                    indexValue: index,\n                    data: filterNullValues(d.data),\n                }\n\n                return {\n                    key: `${stackedDataItem.key}.${index}`,\n                    data: barData,\n                    x,\n                    y,\n                    width: barWidth,\n                    height: barHeight,\n                    color: getColor(barData),\n                    label: getTooltipLabel(barData),\n                }\n            })\n        )\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n) => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars = flattenDeep(\n        stackedData.map(stackedDataItem =>\n            yScale.domain().map((index, i) => {\n                const d = stackedDataItem[i]\n                const y = yScale(getIndex(d.data)) ?? 0\n                const x = (getX(d) ?? 0) + innerPadding * 0.5\n                const barWidth = getWidth(d, x) - innerPadding\n                const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n                const barData = {\n                    id: stackedDataItem.key,\n                    value: rawValue === null ? rawValue : value,\n                    formattedValue: formatValue(value),\n                    hidden: false,\n                    index: i,\n                    indexValue: index,\n                    data: filterNullValues(d.data),\n                }\n\n                return {\n                    key: `${stackedDataItem.key}.${index}`,\n                    data: barData,\n                    x,\n                    y,\n                    width: barWidth,\n                    height: barHeight,\n                    color: getColor(barData),\n                    label: getTooltipLabel(barData),\n                }\n            })\n        )\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep((stackedData as unknown) as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { BarDatum, BarLegendProps, BarSvgProps, BarsWithHidden, LegendLabelDatum } from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport { uniqBy } from 'lodash'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n) => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n) => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { BarDatum, BarItemProps } from './types'\nimport { animated } from '@react-spring/web'\nimport { createElement, useCallback } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: { height, transform, width, x, y, ...style },\n\n    borderRadius,\n    borderWidth,\n    borderColor,\n\n    label,\n    shouldRenderLabel,\n    labelColor,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) =>\n            showTooltipFromEvent(createElement(tooltip, { ...bar, ...data }), event),\n        [bar, data, showTooltipFromEvent, tooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(createElement(tooltip, { ...bar, ...data }), event)\n        },\n        [bar, data, onMouseEnter, showTooltipFromEvent, tooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={width}\n                height={height}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? style.color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={x}\n                    y={y}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n","import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { ComputedDatum } from './types'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ScaleBandSpec, ScaleSpec } from '@nivo/scales'\n\nexport const defaultProps = {\n    indexBy: 'id',\n    keys: ['value'],\n\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    reverse: false,\n\n    minValue: 'auto' as const,\n    maxValue: 'auto' as const,\n\n    valueScale: { type: 'linear' } as ScaleSpec,\n    indexScale: { type: 'band', round: true } as ScaleBandSpec,\n\n    padding: 0.1,\n    innerPadding: 0,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { from: 'theme', theme: 'labels.text.fill' },\n\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: <RawDatum>(datum: ComputedDatum<RawDatum>) => `${datum.id} - ${datum.indexValue}`,\n\n    legends: [],\n\n    annotations: [],\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'markers', 'legends', 'annotations'],\n    barComponent: BarItem,\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n}\n\nexport const canvasDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'legends', 'annotations'],\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { Axes, Grid } from '@nivo/axes'\nimport { BarAnnotations } from './BarAnnotations'\nimport {\n    BarDatum,\n    BarLayer,\n    BarLayerId,\n    BarSvgProps,\n    ComputedBarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n} from './types'\nimport { BarLegends } from './BarLegends'\nimport {\n    // @ts-ignore\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n    usePropertyAccessor,\n    useTheme,\n    useValueFormatter,\n} from '@nivo/core'\nimport { Fragment, ReactNode, createElement, useCallback, useMemo, useState } from 'react'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\nimport { svgDefaultProps } from './props'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { useTransition } from '@react-spring/web'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy = svgDefaultProps.indexBy,\n    keys = svgDefaultProps.keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode = svgDefaultProps.groupMode,\n    layout = svgDefaultProps.layout,\n    reverse = svgDefaultProps.reverse,\n    minValue = svgDefaultProps.minValue,\n    maxValue = svgDefaultProps.maxValue,\n\n    valueScale = svgDefaultProps.valueScale,\n    indexScale = svgDefaultProps.indexScale,\n\n    padding = svgDefaultProps.padding,\n    innerPadding = svgDefaultProps.innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel = svgDefaultProps.enableLabel,\n    label = svgDefaultProps.label,\n    labelSkipWidth = svgDefaultProps.labelSkipWidth,\n    labelSkipHeight = svgDefaultProps.labelSkipHeight,\n    labelTextColor = svgDefaultProps.labelTextColor,\n\n    markers,\n\n    colorBy = svgDefaultProps.colorBy,\n    colors = svgDefaultProps.colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel = svgDefaultProps.tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends = svgDefaultProps.legends,\n\n    role = svgDefaultProps.role,\n\n    initialHiddenIds,\n}: InnerBarProps<RawDatum>) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const formatValue = useValueFormatter(valueFormat)\n    const getBorderColor = useInheritedColor<ComputedBarDatum<RawDatum>>(borderColor, theme)\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getLabelColor = useInheritedColor<ComputedBarDatum<RawDatum>>(labelTextColor, theme)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const result = generateBars({\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width: innerWidth,\n        height: innerHeight,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n    })\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = result.bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, result.bars]\n    )\n\n    const barsWithValue = useMemo(\n        () =>\n            result.bars.filter(\n                (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n            ),\n        [result.bars]\n    )\n\n    const transition = useTransition(barsWithValue, {\n        keys: bar => bar.key,\n        enter: bar => ({\n            x: bar.width / 2,\n            y: bar.height / 2,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            transform: `translate(${bar.x}, ${bar.y})`,\n        }),\n        update: bar => ({\n            x: bar.width / 2,\n            y: bar.height / 2,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            transform: `translate(${bar.x}, ${bar.y})`,\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const shouldRenderLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipHeight, labelSkipWidth]\n    )\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, result.bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={result.bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={result.xScale as any}\n                yScale={result.yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderLabel(bar),\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar),\n                        borderColor: getBorderColor(bar),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (result.xScale as any) : null}\n                yScale={enableGridY ? (result.yScale as any) : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        const data = ([] as LegendData[]).concat(\n            ...legends.map(legend =>\n                getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : result.bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n            )\n        )\n\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                data={data}\n                legends={legends}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={result.xScale}\n                yScale={result.yScale}\n                theme={theme}\n            />\n        )\n    }\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: any = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            innerWidth,\n            innerHeight,\n            width,\n            height,\n            ...result,\n        }),\n        [commonProps, height, innerHeight, innerWidth, margin, result, width]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import {\n    BarCanvasLayer,\n    BarCanvasProps,\n    BarDatum,\n    ComputedBarDatum,\n    ComputedBarDatumWithValue,\n} from './types'\nimport {\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    usePropertyAccessor,\n    useTheme,\n    useValueFormatter,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\n\ndeclare module 'react' {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => React.ReactElement | null\n    ): (props: P & React.RefAttributes<T>) => React.ReactElement | null\n}\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy = canvasDefaultProps.indexBy,\n    keys = canvasDefaultProps.keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode = canvasDefaultProps.groupMode,\n    layout = canvasDefaultProps.layout,\n    reverse = canvasDefaultProps.reverse,\n    minValue = canvasDefaultProps.minValue,\n    maxValue = canvasDefaultProps.maxValue,\n\n    valueScale = canvasDefaultProps.valueScale,\n    indexScale = canvasDefaultProps.indexScale,\n\n    padding = canvasDefaultProps.padding,\n    innerPadding = canvasDefaultProps.innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = 'center'\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + width / 2, y + height / 2)\n        }\n    },\n\n    enableLabel = canvasDefaultProps.enableLabel,\n    label = canvasDefaultProps.label,\n    labelSkipWidth = canvasDefaultProps.labelSkipWidth,\n    labelSkipHeight = canvasDefaultProps.labelSkipHeight,\n    labelTextColor = canvasDefaultProps.labelTextColor,\n\n    colorBy = canvasDefaultProps.colorBy,\n    colors = canvasDefaultProps.colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor = canvasDefaultProps.borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel = canvasDefaultProps.tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends = canvasDefaultProps.legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const formatValue = useValueFormatter(valueFormat)\n    const getBorderColor = useInheritedColor<ComputedBarDatum<RawDatum>>(borderColor, theme)\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getLabelColor = useInheritedColor<ComputedBarDatum<RawDatum>>(labelTextColor, theme)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n\n    const options = {\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width: innerWidth,\n        height: innerHeight,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        formatValue,\n        getTooltipLabel,\n    }\n\n    const result =\n        groupMode === 'grouped' ? generateGroupedBars(options) : generateStackedBars(options)\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = result.bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: false } }\n            }),\n        [keys, result.bars]\n    )\n\n    const barsWithValue = useMemo(\n        () =>\n            result.bars.filter(\n                (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n            ),\n        [result.bars]\n    )\n\n    const shouldRenderLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipHeight, labelSkipWidth]\n    )\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: result.bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: any = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            margin,\n            innerWidth,\n            innerHeight,\n            width,\n            height,\n            ...result,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            height,\n            innerHeight,\n            innerWidth,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            margin,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            result,\n            tooltip,\n            width,\n        ]\n    )\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: result.xScale as any,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: result.yScale as any,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: result.xScale as any,\n                    yScale: result.yScale as any,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar),\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar),\n                        shouldRenderLabel: shouldRenderLabel(bar),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legends.forEach(legend => {\n                    const data = getLegendData({\n                        bars: legendData,\n                        direction: legend.direction,\n                        from: legend.dataFrom,\n                        groupMode,\n                        layout,\n                        legendLabel,\n                        reverse,\n                    })\n\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendData,\n        legendLabel,\n        legends,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        result.xScale,\n        result.yScale,\n        reverse,\n        shouldRenderLabel,\n        theme,\n        width,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!result.bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(result.bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, result.bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!result.bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(result.bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, result.bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!result.bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(result.bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, result.bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n","import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: Omit<BarSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: Omit<BarCanvasProps<RawDatum>, 'height' | 'width'>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas width={width} height={height} {...props} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n"],"names":["objectWithoutPropertiesLoose","defineProperty","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arrayWithHoles","iterableToArrayLimit","nonIterableRest","BarAnnotations","bars","annotations","boundAnnotations","useAnnotations","data","getPosition","bar","x","width","y","height","getDimensions","size","Math","max","_jsx","map","annotation","i","BarLegends","legends","toggleSerie","legend","dataFrom","undefined","getIndexScale","getIndex","padding","indexScale","axis","computeScale","all","min","normalizeData","keys","item","reduce","acc","key","filterNullValues","Object","coerceValue","value","Number","gt","other","lt","flatten","array","concat","range","start","end","Array","from","repeat","_","index","clampToZero","zeroIfNotFinite","isFinite","generateVerticalGroupedBars","barWidth","reverse","yRef","formatValue","getColor","getTooltipLabel","innerPadding","xScale","yScale","compare","getY","d","getHeight","cleanedData","domain","length","rawValue","indexValue","barHeight","barData","id","formattedValue","hidden","color","label","generateHorizontalGroupedBars","xRef","getX","getWidth","generateGroupedBars","layout","minValue","maxValue","valueScale","indexScaleConfig","hiddenIds","props","filter","includes","otherAxis","scaleSpec","clampMin","values","entry","k","Boolean","scale","bandwidth","params","flattenDeep","arr","some","isArray","filterZerosIfLog","type","num","generateVerticalStackedBars","stackedData","stackedDataItem","generateHorizontalStackedBars","generateStackedBars","stack","offset","stackOffsetDiverging","getLegendDataForKeys","direction","groupMode","getLegendLabel","getLegendDataForIndexes","getLegendData","legendLabel","getPropertyAccessor","BarItem","style","transform","borderRadius","borderWidth","borderColor","shouldRenderLabel","labelColor","isInteractive","onClick","onMouseEnter","onMouseLeave","tooltip","theme","useTheme","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useCallback","event","handleTooltip","createElement","handleMouseEnter","handleMouseLeave","_jsxs","fill","labels","text","pointerEvents","BarTooltip","defaultProps","indexBy","round","axisBottom","axisLeft","enableGridX","enableGridY","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","colorBy","colors","scheme","tooltipLabel","datum","svgDefaultProps","layers","barComponent","defs","animate","motionConfig","role","canvasDefaultProps","pixelRatio","window","devicePixelRatio","InnerBar","partialMargin","margin","axisTop","axisRight","gridXValues","gridYValues","markers","valueFormat","initialHiddenIds","useState","setHiddenIds","state","indexOf","useMotionConfig","springConfig","config","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","useValueFormatter","getBorderColor","useInheritedColor","useOrdinalColorScale","usePropertyAccessor","getLabel","getLabelColor","generateBars","result","legendData","useMemo","find","barsWithValue","transition","useTransition","enter","update","immediate","commonProps","boundDefs","bindDefs","dataKey","targetKey","layerById","axes","grid","Fragment","layerContext","layer","Bar","renderWrapper","otherProps","findBarUnderCursor","nodes","node","isCursorInRect","left","top","isNumber","InnerBarCanvas","renderBar","ctx","fillStyle","strokeStyle","lineWidth","beginPath","radius","moveTo","lineTo","quadraticCurveTo","closePath","rect","stroke","textBaseline","textAlign","fillText","canvasRef","canvasEl","useRef","options","useComputedAnnotations","useEffect","current","getContext","background","fillRect","translate","forEach","line","strokeWidth","renderGridLinesToCanvas","renderAxesToCanvas","right","bottom","renderLegendToCanvas","containerWidth","containerHeight","renderAnnotationsToCanvas","save","handleMouseHover","getRelativeCursor","canvas","cursor","BarCanvas","forwardRef","ref","ResponsiveBar","ResponsiveBarCanvas"],"mappings":"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"}